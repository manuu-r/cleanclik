// Mocks generated by Mockito 5.4.6 from annotations
// in cleanclik/test/helpers/mock_services.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i21;
import 'dart:ui' as _i9;

import 'package:camera/camera.dart' as _i19;
import 'package:camera_platform_interface/camera_platform_interface.dart'
    as _i18;
import 'package:cleanclik/core/models/database_exceptions.dart' as _i15;
import 'package:cleanclik/core/models/detected_object.dart' as _i29;
import 'package:cleanclik/core/models/leaderboard_entry.dart' as _i13;
import 'package:cleanclik/core/models/sync_status.dart' as _i16;
import 'package:cleanclik/core/models/user.dart' as _i27;
import 'package:cleanclik/core/models/waste_category.dart' as _i30;
import 'package:cleanclik/core/services/auth/auth_service.dart' as _i8;
import 'package:cleanclik/core/services/business/inventory_service.dart'
    as _i10;
import 'package:cleanclik/core/services/camera/ml_detection_service.dart'
    as _i28;
import 'package:cleanclik/core/services/camera/qr_bin_service.dart' as _i31;
import 'package:cleanclik/core/services/data/database_service.dart' as _i35;
import 'package:cleanclik/core/services/data/local_storage_service.dart'
    as _i36;
import 'package:cleanclik/core/services/data/sync_service.dart' as _i37;
import 'package:cleanclik/core/services/location/bin_matching_service.dart'
    as _i12;
import 'package:cleanclik/core/services/location/location_service.dart' as _i32;
import 'package:cleanclik/core/services/social/leaderboard_service.dart'
    as _i34;
import 'package:flutter/foundation.dart' as _i20;
import 'package:flutter/services.dart' as _i38;
import 'package:flutter/widgets.dart' as _i3;
import 'package:flutter_riverpod/flutter_riverpod.dart' as _i11;
import 'package:geolocator/geolocator.dart' as _i39;
import 'package:go_router/src/configuration.dart' as _i2;
import 'package:go_router/src/delegate.dart' as _i4;
import 'package:go_router/src/information_provider.dart' as _i5;
import 'package:go_router/src/match.dart' as _i26;
import 'package:go_router/src/parser.dart' as _i6;
import 'package:go_router/src/router.dart' as _i24;
import 'package:go_router/src/state.dart' as _i7;
import 'package:google_mlkit_object_detection/google_mlkit_object_detection.dart'
    as _i17;
import 'package:google_sign_in/google_sign_in.dart' as _i23;
import 'package:latlong2/latlong.dart' as _i33;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i25;
import 'package:storage_client/src/fetch.dart' as _i22;
import 'package:supabase_flutter/supabase_flutter.dart' as _i14;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeRouteConfiguration_0 extends _i1.SmartFake
    implements _i2.RouteConfiguration {
  _FakeRouteConfiguration_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeBackButtonDispatcher_1 extends _i1.SmartFake
    implements _i3.BackButtonDispatcher {
  _FakeBackButtonDispatcher_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeGoRouterDelegate_2 extends _i1.SmartFake
    implements _i4.GoRouterDelegate {
  _FakeGoRouterDelegate_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeGoRouteInformationProvider_3 extends _i1.SmartFake
    implements _i5.GoRouteInformationProvider {
  _FakeGoRouteInformationProvider_3(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeGoRouteInformationParser_4 extends _i1.SmartFake
    implements _i6.GoRouteInformationParser {
  _FakeGoRouteInformationParser_4(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeGoRouterState_5 extends _i1.SmartFake implements _i7.GoRouterState {
  _FakeGoRouterState_5(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeAuthState_6 extends _i1.SmartFake implements _i8.AuthState {
  _FakeAuthState_6(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeAuthResult_7 extends _i1.SmartFake implements _i8.AuthResult {
  _FakeAuthResult_7(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeRect_8 extends _i1.SmartFake implements _i9.Rect {
  _FakeRect_8(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeSessionStats_9 extends _i1.SmartFake implements _i10.SessionStats {
  _FakeSessionStats_9(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeNotifierProviderRef_10<T> extends _i1.SmartFake
    implements _i11.NotifierProviderRef<T> {
  _FakeNotifierProviderRef_10(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeInventoryService_11 extends _i1.SmartFake
    implements _i10.InventoryService {
  _FakeInventoryService_11(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeBinMatchResult_12 extends _i1.SmartFake
    implements _i12.BinMatchResult {
  _FakeBinMatchResult_12(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeInventoryItem_13 extends _i1.SmartFake
    implements _i10.InventoryItem {
  _FakeInventoryItem_13(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeLeaderboardPage_14 extends _i1.SmartFake
    implements _i13.LeaderboardPage {
  _FakeLeaderboardPage_14(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeSupabaseClient_15 extends _i1.SmartFake
    implements _i14.SupabaseClient {
  _FakeSupabaseClient_15(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeDatabaseResult_16<T1> extends _i1.SmartFake
    implements _i15.DatabaseResult<T1> {
  _FakeDatabaseResult_16(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeGlobalSyncStatus_17 extends _i1.SmartFake
    implements _i16.GlobalSyncStatus {
  _FakeGlobalSyncStatus_17(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeObjectDetectorOptions_18 extends _i1.SmartFake
    implements _i17.ObjectDetectorOptions {
  _FakeObjectDetectorOptions_18(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeMediaSettings_19 extends _i1.SmartFake
    implements _i18.MediaSettings {
  _FakeMediaSettings_19(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeCameraDescription_20 extends _i1.SmartFake
    implements _i19.CameraDescription {
  _FakeCameraDescription_20(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeCameraValue_21 extends _i1.SmartFake implements _i19.CameraValue {
  _FakeCameraValue_21(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeXFile_22 extends _i1.SmartFake implements _i19.XFile {
  _FakeXFile_22(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeWidget_23 extends _i1.SmartFake implements _i3.Widget {
  _FakeWidget_23(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);

  @override
  String toString({
    _i20.DiagnosticLevel? minLevel = _i20.DiagnosticLevel.info,
  }) => super.toString();
}

class _FakeDateTime_24 extends _i1.SmartFake implements DateTime {
  _FakeDateTime_24(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeFunctionsClient_25 extends _i1.SmartFake
    implements _i14.FunctionsClient {
  _FakeFunctionsClient_25(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeSupabaseStorageClient_26 extends _i1.SmartFake
    implements _i14.SupabaseStorageClient {
  _FakeSupabaseStorageClient_26(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeRealtimeClient_27 extends _i1.SmartFake
    implements _i14.RealtimeClient {
  _FakeRealtimeClient_27(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakePostgrestClient_28 extends _i1.SmartFake
    implements _i14.PostgrestClient {
  _FakePostgrestClient_28(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeGoTrueClient_29 extends _i1.SmartFake implements _i14.GoTrueClient {
  _FakeGoTrueClient_29(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeSupabaseQueryBuilder_30 extends _i1.SmartFake
    implements _i14.SupabaseQueryBuilder {
  _FakeSupabaseQueryBuilder_30(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeSupabaseQuerySchema_31 extends _i1.SmartFake
    implements _i14.SupabaseQuerySchema {
  _FakeSupabaseQuerySchema_31(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakePostgrestFilterBuilder_32<T1> extends _i1.SmartFake
    implements _i14.PostgrestFilterBuilder<T1> {
  _FakePostgrestFilterBuilder_32(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeRealtimeChannel_33 extends _i1.SmartFake
    implements _i14.RealtimeChannel {
  _FakeRealtimeChannel_33(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeGoTrueAdminApi_34 extends _i1.SmartFake
    implements _i14.GoTrueAdminApi {
  _FakeGoTrueAdminApi_34(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeGoTrueMFAApi_35 extends _i1.SmartFake implements _i14.GoTrueMFAApi {
  _FakeGoTrueMFAApi_35(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeAuthResponse_36 extends _i1.SmartFake implements _i14.AuthResponse {
  _FakeAuthResponse_36(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeOAuthResponse_37 extends _i1.SmartFake
    implements _i14.OAuthResponse {
  _FakeOAuthResponse_37(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeAuthSessionUrlResponse_38 extends _i1.SmartFake
    implements _i14.AuthSessionUrlResponse {
  _FakeAuthSessionUrlResponse_38(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeResendResponse_39 extends _i1.SmartFake
    implements _i14.ResendResponse {
  _FakeResendResponse_39(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeUserResponse_40 extends _i1.SmartFake implements _i14.UserResponse {
  _FakeUserResponse_40(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeObject_41 extends _i1.SmartFake implements Object {
  _FakeObject_41(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakePostgrestQueryBuilder_42<T1> extends _i1.SmartFake
    implements _i14.PostgrestQueryBuilder<T1> {
  _FakePostgrestQueryBuilder_42(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakePostgrestBuilder_43<T1, S, R> extends _i1.SmartFake
    implements _i14.PostgrestBuilder<T1, S, R> {
  _FakePostgrestBuilder_43(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeUri_44 extends _i1.SmartFake implements Uri {
  _FakeUri_44(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeFuture_45<T1> extends _i1.SmartFake implements _i21.Future<T1> {
  _FakeFuture_45(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeFetch_46 extends _i1.SmartFake implements _i22.Fetch {
  _FakeFetch_46(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeStorageFileApi_47 extends _i1.SmartFake
    implements _i14.StorageFileApi {
  _FakeStorageFileApi_47(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeBucket_48 extends _i1.SmartFake implements _i14.Bucket {
  _FakeBucket_48(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeGoogleSignInAuthentication_49 extends _i1.SmartFake
    implements _i23.GoogleSignInAuthentication {
  _FakeGoogleSignInAuthentication_49(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [GoRouter].
///
/// See the documentation for Mockito's code generation for more information.
class MockGoRouter extends _i1.Mock implements _i24.GoRouter {
  MockGoRouter() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.RouteConfiguration get configuration =>
      (super.noSuchMethod(
            Invocation.getter(#configuration),
            returnValue: _FakeRouteConfiguration_0(
              this,
              Invocation.getter(#configuration),
            ),
          )
          as _i2.RouteConfiguration);

  @override
  _i3.BackButtonDispatcher get backButtonDispatcher =>
      (super.noSuchMethod(
            Invocation.getter(#backButtonDispatcher),
            returnValue: _FakeBackButtonDispatcher_1(
              this,
              Invocation.getter(#backButtonDispatcher),
            ),
          )
          as _i3.BackButtonDispatcher);

  @override
  _i4.GoRouterDelegate get routerDelegate =>
      (super.noSuchMethod(
            Invocation.getter(#routerDelegate),
            returnValue: _FakeGoRouterDelegate_2(
              this,
              Invocation.getter(#routerDelegate),
            ),
          )
          as _i4.GoRouterDelegate);

  @override
  _i5.GoRouteInformationProvider get routeInformationProvider =>
      (super.noSuchMethod(
            Invocation.getter(#routeInformationProvider),
            returnValue: _FakeGoRouteInformationProvider_3(
              this,
              Invocation.getter(#routeInformationProvider),
            ),
          )
          as _i5.GoRouteInformationProvider);

  @override
  _i6.GoRouteInformationParser get routeInformationParser =>
      (super.noSuchMethod(
            Invocation.getter(#routeInformationParser),
            returnValue: _FakeGoRouteInformationParser_4(
              this,
              Invocation.getter(#routeInformationParser),
            ),
          )
          as _i6.GoRouteInformationParser);

  @override
  bool get overridePlatformDefaultLocation =>
      (super.noSuchMethod(
            Invocation.getter(#overridePlatformDefaultLocation),
            returnValue: false,
          )
          as bool);

  @override
  _i7.GoRouterState get state =>
      (super.noSuchMethod(
            Invocation.getter(#state),
            returnValue: _FakeGoRouterState_5(this, Invocation.getter(#state)),
          )
          as _i7.GoRouterState);

  @override
  set configuration(_i2.RouteConfiguration? _configuration) =>
      super.noSuchMethod(
        Invocation.setter(#configuration, _configuration),
        returnValueForMissingStub: null,
      );

  @override
  set routerDelegate(_i4.GoRouterDelegate? _routerDelegate) =>
      super.noSuchMethod(
        Invocation.setter(#routerDelegate, _routerDelegate),
        returnValueForMissingStub: null,
      );

  @override
  set routeInformationProvider(
    _i5.GoRouteInformationProvider? _routeInformationProvider,
  ) => super.noSuchMethod(
    Invocation.setter(#routeInformationProvider, _routeInformationProvider),
    returnValueForMissingStub: null,
  );

  @override
  set routeInformationParser(
    _i6.GoRouteInformationParser? _routeInformationParser,
  ) => super.noSuchMethod(
    Invocation.setter(#routeInformationParser, _routeInformationParser),
    returnValueForMissingStub: null,
  );

  @override
  bool canPop() =>
      (super.noSuchMethod(Invocation.method(#canPop, []), returnValue: false)
          as bool);

  @override
  String namedLocation(
    String? name, {
    Map<String, String>? pathParameters = const {},
    Map<String, dynamic>? queryParameters = const {},
    String? fragment,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #namedLocation,
              [name],
              {
                #pathParameters: pathParameters,
                #queryParameters: queryParameters,
                #fragment: fragment,
              },
            ),
            returnValue: _i25.dummyValue<String>(
              this,
              Invocation.method(
                #namedLocation,
                [name],
                {
                  #pathParameters: pathParameters,
                  #queryParameters: queryParameters,
                  #fragment: fragment,
                },
              ),
            ),
          )
          as String);

  @override
  void go(String? location, {Object? extra}) => super.noSuchMethod(
    Invocation.method(#go, [location], {#extra: extra}),
    returnValueForMissingStub: null,
  );

  @override
  void restore(_i26.RouteMatchList? matchList) => super.noSuchMethod(
    Invocation.method(#restore, [matchList]),
    returnValueForMissingStub: null,
  );

  @override
  void goNamed(
    String? name, {
    Map<String, String>? pathParameters = const {},
    Map<String, dynamic>? queryParameters = const {},
    Object? extra,
    String? fragment,
  }) => super.noSuchMethod(
    Invocation.method(
      #goNamed,
      [name],
      {
        #pathParameters: pathParameters,
        #queryParameters: queryParameters,
        #extra: extra,
        #fragment: fragment,
      },
    ),
    returnValueForMissingStub: null,
  );

  @override
  _i21.Future<T?> push<T extends Object?>(String? location, {Object? extra}) =>
      (super.noSuchMethod(
            Invocation.method(#push, [location], {#extra: extra}),
            returnValue: _i21.Future<T?>.value(),
          )
          as _i21.Future<T?>);

  @override
  _i21.Future<T?> pushNamed<T extends Object?>(
    String? name, {
    Map<String, String>? pathParameters = const {},
    Map<String, dynamic>? queryParameters = const {},
    Object? extra,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #pushNamed,
              [name],
              {
                #pathParameters: pathParameters,
                #queryParameters: queryParameters,
                #extra: extra,
              },
            ),
            returnValue: _i21.Future<T?>.value(),
          )
          as _i21.Future<T?>);

  @override
  _i21.Future<T?> pushReplacement<T extends Object?>(
    String? location, {
    Object? extra,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#pushReplacement, [location], {#extra: extra}),
            returnValue: _i21.Future<T?>.value(),
          )
          as _i21.Future<T?>);

  @override
  _i21.Future<T?> pushReplacementNamed<T extends Object?>(
    String? name, {
    Map<String, String>? pathParameters = const {},
    Map<String, dynamic>? queryParameters = const {},
    Object? extra,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #pushReplacementNamed,
              [name],
              {
                #pathParameters: pathParameters,
                #queryParameters: queryParameters,
                #extra: extra,
              },
            ),
            returnValue: _i21.Future<T?>.value(),
          )
          as _i21.Future<T?>);

  @override
  _i21.Future<T?> replace<T>(String? location, {Object? extra}) =>
      (super.noSuchMethod(
            Invocation.method(#replace, [location], {#extra: extra}),
            returnValue: _i21.Future<T?>.value(),
          )
          as _i21.Future<T?>);

  @override
  _i21.Future<T?> replaceNamed<T>(
    String? name, {
    Map<String, String>? pathParameters = const {},
    Map<String, dynamic>? queryParameters = const {},
    Object? extra,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #replaceNamed,
              [name],
              {
                #pathParameters: pathParameters,
                #queryParameters: queryParameters,
                #extra: extra,
              },
            ),
            returnValue: _i21.Future<T?>.value(),
          )
          as _i21.Future<T?>);

  @override
  void pop<T extends Object?>([T? result]) => super.noSuchMethod(
    Invocation.method(#pop, [result]),
    returnValueForMissingStub: null,
  );

  @override
  void refresh() => super.noSuchMethod(
    Invocation.method(#refresh, []),
    returnValueForMissingStub: null,
  );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [AuthService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthService extends _i1.Mock implements _i8.AuthService {
  MockAuthService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i21.Stream<_i8.AuthState> get authStateStream =>
      (super.noSuchMethod(
            Invocation.getter(#authStateStream),
            returnValue: _i21.Stream<_i8.AuthState>.empty(),
          )
          as _i21.Stream<_i8.AuthState>);

  @override
  _i8.AuthState get currentState =>
      (super.noSuchMethod(
            Invocation.getter(#currentState),
            returnValue: _FakeAuthState_6(
              this,
              Invocation.getter(#currentState),
            ),
          )
          as _i8.AuthState);

  @override
  bool get isAuthenticated =>
      (super.noSuchMethod(
            Invocation.getter(#isAuthenticated),
            returnValue: false,
          )
          as bool);

  @override
  _i21.Future<void> initialize() =>
      (super.noSuchMethod(
            Invocation.method(#initialize, []),
            returnValue: _i21.Future<void>.value(),
            returnValueForMissingStub: _i21.Future<void>.value(),
          )
          as _i21.Future<void>);

  @override
  _i21.Future<void> refreshAuthState() =>
      (super.noSuchMethod(
            Invocation.method(#refreshAuthState, []),
            returnValue: _i21.Future<void>.value(),
            returnValueForMissingStub: _i21.Future<void>.value(),
          )
          as _i21.Future<void>);

  @override
  _i21.Future<void> handleAuthCallback(String? url) =>
      (super.noSuchMethod(
            Invocation.method(#handleAuthCallback, [url]),
            returnValue: _i21.Future<void>.value(),
            returnValueForMissingStub: _i21.Future<void>.value(),
          )
          as _i21.Future<void>);

  @override
  _i21.Future<_i8.AuthResult> signInWithEmail(
    String? email,
    String? password,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#signInWithEmail, [email, password]),
            returnValue: _i21.Future<_i8.AuthResult>.value(
              _FakeAuthResult_7(
                this,
                Invocation.method(#signInWithEmail, [email, password]),
              ),
            ),
          )
          as _i21.Future<_i8.AuthResult>);

  @override
  _i21.Future<_i8.AuthResult> signInWithGoogle() =>
      (super.noSuchMethod(
            Invocation.method(#signInWithGoogle, []),
            returnValue: _i21.Future<_i8.AuthResult>.value(
              _FakeAuthResult_7(this, Invocation.method(#signInWithGoogle, [])),
            ),
          )
          as _i21.Future<_i8.AuthResult>);

  @override
  _i21.Future<_i8.AuthResult> signUpWithEmail(
    String? email,
    String? password,
    String? username,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#signUpWithEmail, [email, password, username]),
            returnValue: _i21.Future<_i8.AuthResult>.value(
              _FakeAuthResult_7(
                this,
                Invocation.method(#signUpWithEmail, [
                  email,
                  password,
                  username,
                ]),
              ),
            ),
          )
          as _i21.Future<_i8.AuthResult>);

  @override
  _i21.Future<void> signOut() =>
      (super.noSuchMethod(
            Invocation.method(#signOut, []),
            returnValue: _i21.Future<void>.value(),
            returnValueForMissingStub: _i21.Future<void>.value(),
          )
          as _i21.Future<void>);

  @override
  _i21.Future<void> updateProfile(_i27.User? updatedUser) =>
      (super.noSuchMethod(
            Invocation.method(#updateProfile, [updatedUser]),
            returnValue: _i21.Future<void>.value(),
            returnValueForMissingStub: _i21.Future<void>.value(),
          )
          as _i21.Future<void>);

  @override
  void updateUserRank(int? newRank) => super.noSuchMethod(
    Invocation.method(#updateUserRank, [newRank]),
    returnValueForMissingStub: null,
  );

  @override
  _i21.Future<void> addPoints(int? points) =>
      (super.noSuchMethod(
            Invocation.method(#addPoints, [points]),
            returnValue: _i21.Future<void>.value(),
            returnValueForMissingStub: _i21.Future<void>.value(),
          )
          as _i21.Future<void>);

  @override
  _i21.Future<void> forceRefreshRank() =>
      (super.noSuchMethod(
            Invocation.method(#forceRefreshRank, []),
            returnValue: _i21.Future<void>.value(),
            returnValueForMissingStub: _i21.Future<void>.value(),
          )
          as _i21.Future<void>);

  @override
  _i21.Future<void> handleEmailVerificationComplete() =>
      (super.noSuchMethod(
            Invocation.method(#handleEmailVerificationComplete, []),
            returnValue: _i21.Future<void>.value(),
            returnValueForMissingStub: _i21.Future<void>.value(),
          )
          as _i21.Future<void>);

  @override
  _i21.Future<void> initializeWithDemoUser() =>
      (super.noSuchMethod(
            Invocation.method(#initializeWithDemoUser, []),
            returnValue: _i21.Future<void>.value(),
            returnValueForMissingStub: _i21.Future<void>.value(),
          )
          as _i21.Future<void>);

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [MLDetectionService].
///
/// See the documentation for Mockito's code generation for more information.
class MockMLDetectionService extends _i1.Mock
    implements _i28.MLDetectionService {
  MockMLDetectionService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get isInitialized =>
      (super.noSuchMethod(Invocation.getter(#isInitialized), returnValue: false)
          as bool);

  @override
  bool get isDetecting =>
      (super.noSuchMethod(Invocation.getter(#isDetecting), returnValue: false)
          as bool);

  @override
  _i21.Stream<List<_i29.DetectedObject>> get objectsStream =>
      (super.noSuchMethod(
            Invocation.getter(#objectsStream),
            returnValue: _i21.Stream<List<_i29.DetectedObject>>.empty(),
          )
          as _i21.Stream<List<_i29.DetectedObject>>);

  @override
  _i21.Future<void> initialize() =>
      (super.noSuchMethod(
            Invocation.method(#initialize, []),
            returnValue: _i21.Future<void>.value(),
            returnValueForMissingStub: _i21.Future<void>.value(),
          )
          as _i21.Future<void>);

  @override
  _i21.Future<List<_i29.DetectedObject>> processImage(
    _i19.CameraImage? image,
    _i19.CameraController? cameraController,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#processImage, [image, cameraController]),
            returnValue: _i21.Future<List<_i29.DetectedObject>>.value(
              <_i29.DetectedObject>[],
            ),
          )
          as _i21.Future<List<_i29.DetectedObject>>);

  @override
  _i9.Rect transformBoundingBox(
    _i9.Rect? mlkitRect,
    _i3.BoxConstraints? previewConstraints,
    _i19.CameraController? cameraController,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#transformBoundingBox, [
              mlkitRect,
              previewConstraints,
              cameraController,
            ]),
            returnValue: _FakeRect_8(
              this,
              Invocation.method(#transformBoundingBox, [
                mlkitRect,
                previewConstraints,
                cameraController,
              ]),
            ),
          )
          as _i9.Rect);

  @override
  void resetTracking() => super.noSuchMethod(
    Invocation.method(#resetTracking, []),
    returnValueForMissingStub: null,
  );

  @override
  _i21.Future<void> dispose() =>
      (super.noSuchMethod(
            Invocation.method(#dispose, []),
            returnValue: _i21.Future<void>.value(),
            returnValueForMissingStub: _i21.Future<void>.value(),
          )
          as _i21.Future<void>);
}

/// A class which mocks [InventoryService].
///
/// See the documentation for Mockito's code generation for more information.
class MockInventoryService extends _i1.Mock implements _i10.InventoryService {
  MockInventoryService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<_i10.InventoryItem> get inventory =>
      (super.noSuchMethod(
            Invocation.getter(#inventory),
            returnValue: <_i10.InventoryItem>[],
          )
          as List<_i10.InventoryItem>);

  @override
  List<_i10.CarriedItem> get carriedItems =>
      (super.noSuchMethod(
            Invocation.getter(#carriedItems),
            returnValue: <_i10.CarriedItem>[],
          )
          as List<_i10.CarriedItem>);

  @override
  int get totalPoints =>
      (super.noSuchMethod(Invocation.getter(#totalPoints), returnValue: 0)
          as int);

  @override
  _i10.SessionStats get sessionStats =>
      (super.noSuchMethod(
            Invocation.getter(#sessionStats),
            returnValue: _FakeSessionStats_9(
              this,
              Invocation.getter(#sessionStats),
            ),
          )
          as _i10.SessionStats);

  @override
  bool get isEmpty =>
      (super.noSuchMethod(Invocation.getter(#isEmpty), returnValue: false)
          as bool);

  @override
  bool get hasItems =>
      (super.noSuchMethod(Invocation.getter(#hasItems), returnValue: false)
          as bool);

  @override
  List<String> get carriedCategories =>
      (super.noSuchMethod(
            Invocation.getter(#carriedCategories),
            returnValue: <String>[],
          )
          as List<String>);

  @override
  Map<String, int> get categoryCounts =>
      (super.noSuchMethod(
            Invocation.getter(#categoryCounts),
            returnValue: <String, int>{},
          )
          as Map<String, int>);

  @override
  _i11.NotifierProviderRef<_i10.InventoryService> get ref =>
      (super.noSuchMethod(
            Invocation.getter(#ref),
            returnValue: _FakeNotifierProviderRef_10<_i10.InventoryService>(
              this,
              Invocation.getter(#ref),
            ),
          )
          as _i11.NotifierProviderRef<_i10.InventoryService>);

  @override
  _i10.InventoryService get state =>
      (super.noSuchMethod(
            Invocation.getter(#state),
            returnValue: _FakeInventoryService_11(
              this,
              Invocation.getter(#state),
            ),
          )
          as _i10.InventoryService);

  @override
  set state(_i10.InventoryService? value) => super.noSuchMethod(
    Invocation.setter(#state, value),
    returnValueForMissingStub: null,
  );

  @override
  _i10.InventoryService build() =>
      (super.noSuchMethod(
            Invocation.method(#build, []),
            returnValue: _FakeInventoryService_11(
              this,
              Invocation.method(#build, []),
            ),
          )
          as _i10.InventoryService);

  @override
  _i21.Future<void> ensureLoaded() =>
      (super.noSuchMethod(
            Invocation.method(#ensureLoaded, []),
            returnValue: _i21.Future<void>.value(),
            returnValueForMissingStub: _i21.Future<void>.value(),
          )
          as _i21.Future<void>);

  @override
  List<_i10.InventoryItem> getItemsByCategory(String? category) =>
      (super.noSuchMethod(
            Invocation.method(#getItemsByCategory, [category]),
            returnValue: <_i10.InventoryItem>[],
          )
          as List<_i10.InventoryItem>);

  @override
  List<_i10.CarriedItem> getItemsByWasteCategory(
    _i30.WasteCategory? category,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getItemsByWasteCategory, [category]),
            returnValue: <_i10.CarriedItem>[],
          )
          as List<_i10.CarriedItem>);

  @override
  int getItemCountByCategory(_i30.WasteCategory? category) =>
      (super.noSuchMethod(
            Invocation.method(#getItemCountByCategory, [category]),
            returnValue: 0,
          )
          as int);

  @override
  Set<_i30.WasteCategory> getCarriedWasteCategories() =>
      (super.noSuchMethod(
            Invocation.method(#getCarriedWasteCategories, []),
            returnValue: <_i30.WasteCategory>{},
          )
          as Set<_i30.WasteCategory>);

  @override
  bool hasItemsOfCategory(_i30.WasteCategory? category) =>
      (super.noSuchMethod(
            Invocation.method(#hasItemsOfCategory, [category]),
            returnValue: false,
          )
          as bool);

  @override
  _i21.Future<bool> addItem(_i10.InventoryItem? item) =>
      (super.noSuchMethod(
            Invocation.method(#addItem, [item]),
            returnValue: _i21.Future<bool>.value(false),
          )
          as _i21.Future<bool>);

  @override
  _i21.Future<bool> addItemFromDetectedObject(
    _i29.DetectedObject? detectedObject,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#addItemFromDetectedObject, [detectedObject]),
            returnValue: _i21.Future<bool>.value(false),
          )
          as _i21.Future<bool>);

  @override
  _i21.Future<bool> addCarriedItem(_i10.CarriedItem? carriedItem) =>
      (super.noSuchMethod(
            Invocation.method(#addCarriedItem, [carriedItem]),
            returnValue: _i21.Future<bool>.value(false),
          )
          as _i21.Future<bool>);

  @override
  _i21.Future<bool> migrateItemFromJson(Map<String, dynamic>? itemJson) =>
      (super.noSuchMethod(
            Invocation.method(#migrateItemFromJson, [itemJson]),
            returnValue: _i21.Future<bool>.value(false),
          )
          as _i21.Future<bool>);

  @override
  _i21.Future<void> removeItem(String? itemId) =>
      (super.noSuchMethod(
            Invocation.method(#removeItem, [itemId]),
            returnValue: _i21.Future<void>.value(),
            returnValueForMissingStub: _i21.Future<void>.value(),
          )
          as _i21.Future<void>);

  @override
  _i21.Future<bool> removeItemByTrackingId(String? trackingId) =>
      (super.noSuchMethod(
            Invocation.method(#removeItemByTrackingId, [trackingId]),
            returnValue: _i21.Future<bool>.value(false),
          )
          as _i21.Future<bool>);

  @override
  _i21.Future<void> removeItems(List<String>? trackingIds) =>
      (super.noSuchMethod(
            Invocation.method(#removeItems, [trackingIds]),
            returnValue: _i21.Future<void>.value(),
            returnValueForMissingStub: _i21.Future<void>.value(),
          )
          as _i21.Future<void>);

  @override
  _i21.Future<List<_i10.InventoryItem>> removeItemsByCategory(
    String? category,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#removeItemsByCategory, [category]),
            returnValue: _i21.Future<List<_i10.InventoryItem>>.value(
              <_i10.InventoryItem>[],
            ),
          )
          as _i21.Future<List<_i10.InventoryItem>>);

  @override
  _i21.Future<int> removeItemsByWasteCategory(_i30.WasteCategory? category) =>
      (super.noSuchMethod(
            Invocation.method(#removeItemsByWasteCategory, [category]),
            returnValue: _i21.Future<int>.value(0),
          )
          as _i21.Future<int>);

  @override
  _i21.Future<void> clearInventory() =>
      (super.noSuchMethod(
            Invocation.method(#clearInventory, []),
            returnValue: _i21.Future<void>.value(),
            returnValueForMissingStub: _i21.Future<void>.value(),
          )
          as _i21.Future<void>);

  @override
  _i21.Future<_i12.BinMatchResult> matchBin(_i31.BinInfo? binInfo) =>
      (super.noSuchMethod(
            Invocation.method(#matchBin, [binInfo]),
            returnValue: _i21.Future<_i12.BinMatchResult>.value(
              _FakeBinMatchResult_12(
                this,
                Invocation.method(#matchBin, [binInfo]),
              ),
            ),
          )
          as _i21.Future<_i12.BinMatchResult>);

  @override
  _i21.Future<void> awardPointsForDisposal(
    List<_i10.InventoryItem>? disposedItems,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#awardPointsForDisposal, [disposedItems]),
            returnValue: _i21.Future<void>.value(),
            returnValueForMissingStub: _i21.Future<void>.value(),
          )
          as _i21.Future<void>);

  @override
  _i21.Future<void> loadInventory() =>
      (super.noSuchMethod(
            Invocation.method(#loadInventory, []),
            returnValue: _i21.Future<void>.value(),
            returnValueForMissingStub: _i21.Future<void>.value(),
          )
          as _i21.Future<void>);

  @override
  Map<String, dynamic> getInventorySummary() =>
      (super.noSuchMethod(
            Invocation.method(#getInventorySummary, []),
            returnValue: <String, dynamic>{},
          )
          as Map<String, dynamic>);

  @override
  void logInventoryState(String? context) => super.noSuchMethod(
    Invocation.method(#logInventoryState, [context]),
    returnValueForMissingStub: null,
  );

  @override
  _i10.InventoryItem createTestItem(String? category, String? displayName) =>
      (super.noSuchMethod(
            Invocation.method(#createTestItem, [category, displayName]),
            returnValue: _FakeInventoryItem_13(
              this,
              Invocation.method(#createTestItem, [category, displayName]),
            ),
          )
          as _i10.InventoryItem);

  @override
  _i21.Future<void> addTestItems() =>
      (super.noSuchMethod(
            Invocation.method(#addTestItems, []),
            returnValue: _i21.Future<void>.value(),
            returnValueForMissingStub: _i21.Future<void>.value(),
          )
          as _i21.Future<void>);

  @override
  _i21.Future<void> syncInventoryData() =>
      (super.noSuchMethod(
            Invocation.method(#syncInventoryData, []),
            returnValue: _i21.Future<void>.value(),
            returnValueForMissingStub: _i21.Future<void>.value(),
          )
          as _i21.Future<void>);

  @override
  _i21.Future<void> dispose() =>
      (super.noSuchMethod(
            Invocation.method(#dispose, []),
            returnValue: _i21.Future<void>.value(),
            returnValueForMissingStub: _i21.Future<void>.value(),
          )
          as _i21.Future<void>);

  @override
  void cleanupOnLogout() => super.noSuchMethod(
    Invocation.method(#cleanupOnLogout, []),
    returnValueForMissingStub: null,
  );

  @override
  void listenSelf(
    void Function(_i10.InventoryService?, _i10.InventoryService)? listener, {
    void Function(Object, StackTrace)? onError,
  }) => super.noSuchMethod(
    Invocation.method(#listenSelf, [listener], {#onError: onError}),
    returnValueForMissingStub: null,
  );

  @override
  bool updateShouldNotify(
    _i10.InventoryService? previous,
    _i10.InventoryService? next,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updateShouldNotify, [previous, next]),
            returnValue: false,
          )
          as bool);
}

/// A class which mocks [LocationService].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocationService extends _i1.Mock implements _i32.LocationService {
  MockLocationService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i21.Stream<_i32.LocationData> get locationStream =>
      (super.noSuchMethod(
            Invocation.getter(#locationStream),
            returnValue: _i21.Stream<_i32.LocationData>.empty(),
          )
          as _i21.Stream<_i32.LocationData>);

  @override
  bool get isTracking =>
      (super.noSuchMethod(Invocation.getter(#isTracking), returnValue: false)
          as bool);

  @override
  _i21.Future<bool> initialize() =>
      (super.noSuchMethod(
            Invocation.method(#initialize, []),
            returnValue: _i21.Future<bool>.value(false),
          )
          as _i21.Future<bool>);

  @override
  _i21.Future<bool> startTracking({
    int? intervalMs = 5000,
    double? distanceFilterMeters = 10.0,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#startTracking, [], {
              #intervalMs: intervalMs,
              #distanceFilterMeters: distanceFilterMeters,
            }),
            returnValue: _i21.Future<bool>.value(false),
          )
          as _i21.Future<bool>);

  @override
  _i21.Future<void> stopTracking() =>
      (super.noSuchMethod(
            Invocation.method(#stopTracking, []),
            returnValue: _i21.Future<void>.value(),
            returnValueForMissingStub: _i21.Future<void>.value(),
          )
          as _i21.Future<void>);

  @override
  _i21.Future<_i32.LocationData?> getCurrentLocation() =>
      (super.noSuchMethod(
            Invocation.method(#getCurrentLocation, []),
            returnValue: _i21.Future<_i32.LocationData?>.value(),
          )
          as _i21.Future<_i32.LocationData?>);

  @override
  double distanceBetween(_i33.LatLng? point1, _i33.LatLng? point2) =>
      (super.noSuchMethod(
            Invocation.method(#distanceBetween, [point1, point2]),
            returnValue: 0.0,
          )
          as double);

  @override
  double bearingBetween(_i33.LatLng? from, _i33.LatLng? to) =>
      (super.noSuchMethod(
            Invocation.method(#bearingBetween, [from, to]),
            returnValue: 0.0,
          )
          as double);

  @override
  bool isWithinRadius(
    _i33.LatLng? center,
    _i33.LatLng? point,
    double? radiusMeters,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#isWithinRadius, [center, point, radiusMeters]),
            returnValue: false,
          )
          as bool);

  @override
  _i32.LocationAccuracyStatus getAccuracyStatus() =>
      (super.noSuchMethod(
            Invocation.method(#getAccuracyStatus, []),
            returnValue: _i32.LocationAccuracyStatus.unknown,
          )
          as _i32.LocationAccuracyStatus);

  @override
  _i21.Future<void> dispose() =>
      (super.noSuchMethod(
            Invocation.method(#dispose, []),
            returnValue: _i21.Future<void>.value(),
            returnValueForMissingStub: _i21.Future<void>.value(),
          )
          as _i21.Future<void>);
}

/// A class which mocks [LeaderboardService].
///
/// See the documentation for Mockito's code generation for more information.
class MockLeaderboardService extends _i1.Mock
    implements _i34.LeaderboardService {
  MockLeaderboardService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i21.Stream<_i13.LeaderboardPage> get leaderboardStream =>
      (super.noSuchMethod(
            Invocation.getter(#leaderboardStream),
            returnValue: _i21.Stream<_i13.LeaderboardPage>.empty(),
          )
          as _i21.Stream<_i13.LeaderboardPage>);

  @override
  _i21.Stream<_i16.SyncStatus> get syncStatusStream =>
      (super.noSuchMethod(
            Invocation.getter(#syncStatusStream),
            returnValue: _i21.Stream<_i16.SyncStatus>.empty(),
          )
          as _i21.Stream<_i16.SyncStatus>);

  @override
  _i21.Stream<int?> get userRankStream =>
      (super.noSuchMethod(
            Invocation.getter(#userRankStream),
            returnValue: _i21.Stream<int?>.empty(),
          )
          as _i21.Stream<int?>);

  @override
  _i21.Stream<String> get achievementUnlockedStream =>
      (super.noSuchMethod(
            Invocation.getter(#achievementUnlockedStream),
            returnValue: _i21.Stream<String>.empty(),
          )
          as _i21.Stream<String>);

  @override
  int get currentStreak =>
      (super.noSuchMethod(Invocation.getter(#currentStreak), returnValue: 0)
          as int);

  @override
  double get accuracyPercentage =>
      (super.noSuchMethod(
            Invocation.getter(#accuracyPercentage),
            returnValue: 0.0,
          )
          as double);

  @override
  bool get isCacheValid =>
      (super.noSuchMethod(Invocation.getter(#isCacheValid), returnValue: false)
          as bool);

  @override
  _i21.Future<void> clearCache() =>
      (super.noSuchMethod(
            Invocation.method(#clearCache, []),
            returnValue: _i21.Future<void>.value(),
            returnValueForMissingStub: _i21.Future<void>.value(),
          )
          as _i21.Future<void>);

  @override
  _i21.Future<void> testDatabaseDirectly() =>
      (super.noSuchMethod(
            Invocation.method(#testDatabaseDirectly, []),
            returnValue: _i21.Future<void>.value(),
            returnValueForMissingStub: _i21.Future<void>.value(),
          )
          as _i21.Future<void>);

  @override
  _i21.Future<_i13.LeaderboardPage> getLeaderboardPage({
    int? page = 1,
    int? pageSize = 20,
    _i13.LeaderboardFilter? filter = _i13.LeaderboardFilter.all,
    _i13.LeaderboardSort? sort = _i13.LeaderboardSort.points,
    bool? forceRefresh = false,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getLeaderboardPage, [], {
              #page: page,
              #pageSize: pageSize,
              #filter: filter,
              #sort: sort,
              #forceRefresh: forceRefresh,
            }),
            returnValue: _i21.Future<_i13.LeaderboardPage>.value(
              _FakeLeaderboardPage_14(
                this,
                Invocation.method(#getLeaderboardPage, [], {
                  #page: page,
                  #pageSize: pageSize,
                  #filter: filter,
                  #sort: sort,
                  #forceRefresh: forceRefresh,
                }),
              ),
            ),
          )
          as _i21.Future<_i13.LeaderboardPage>);

  @override
  _i21.Future<int?> getUserRank({
    _i13.LeaderboardFilter? filter = _i13.LeaderboardFilter.all,
    bool? forceRefresh = false,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getUserRank, [], {
              #filter: filter,
              #forceRefresh: forceRefresh,
            }),
            returnValue: _i21.Future<int?>.value(),
          )
          as _i21.Future<int?>);

  @override
  _i21.Future<_i13.LeaderboardPage> getUserRankContext({
    int? contextSize = 5,
    _i13.LeaderboardFilter? filter = _i13.LeaderboardFilter.all,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getUserRankContext, [], {
              #contextSize: contextSize,
              #filter: filter,
            }),
            returnValue: _i21.Future<_i13.LeaderboardPage>.value(
              _FakeLeaderboardPage_14(
                this,
                Invocation.method(#getUserRankContext, [], {
                  #contextSize: contextSize,
                  #filter: filter,
                }),
              ),
            ),
          )
          as _i21.Future<_i13.LeaderboardPage>);

  @override
  _i21.Future<List<_i13.LeaderboardEntry>> getTopUsers({
    int? limit = 10,
    _i13.LeaderboardFilter? filter = _i13.LeaderboardFilter.all,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getTopUsers, [], {
              #limit: limit,
              #filter: filter,
            }),
            returnValue: _i21.Future<List<_i13.LeaderboardEntry>>.value(
              <_i13.LeaderboardEntry>[],
            ),
          )
          as _i21.Future<List<_i13.LeaderboardEntry>>);

  @override
  _i21.Future<List<_i13.LeaderboardEntry>> searchUsers({
    required String? query,
    int? limit = 20,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#searchUsers, [], {#query: query, #limit: limit}),
            returnValue: _i21.Future<List<_i13.LeaderboardEntry>>.value(
              <_i13.LeaderboardEntry>[],
            ),
          )
          as _i21.Future<List<_i13.LeaderboardEntry>>);

  @override
  _i21.Future<Map<String, dynamic>> getLeaderboardStats() =>
      (super.noSuchMethod(
            Invocation.method(#getLeaderboardStats, []),
            returnValue: _i21.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i21.Future<Map<String, dynamic>>);

  @override
  _i21.Future<void> refreshLeaderboard() =>
      (super.noSuchMethod(
            Invocation.method(#refreshLeaderboard, []),
            returnValue: _i21.Future<void>.value(),
            returnValueForMissingStub: _i21.Future<void>.value(),
          )
          as _i21.Future<void>);

  @override
  _i21.Future<void> refreshUserRank() =>
      (super.noSuchMethod(
            Invocation.method(#refreshUserRank, []),
            returnValue: _i21.Future<void>.value(),
            returnValueForMissingStub: _i21.Future<void>.value(),
          )
          as _i21.Future<void>);

  @override
  _i21.Future<void> triggerRankUpdate(String? userId) =>
      (super.noSuchMethod(
            Invocation.method(#triggerRankUpdate, [userId]),
            returnValue: _i21.Future<void>.value(),
            returnValueForMissingStub: _i21.Future<void>.value(),
          )
          as _i21.Future<void>);

  @override
  _i21.Future<void> syncLeaderboardData() =>
      (super.noSuchMethod(
            Invocation.method(#syncLeaderboardData, []),
            returnValue: _i21.Future<void>.value(),
            returnValueForMissingStub: _i21.Future<void>.value(),
          )
          as _i21.Future<void>);

  @override
  void handleUserPointsUpdate(String? userId, int? newPoints, int? newLevel) =>
      super.noSuchMethod(
        Invocation.method(#handleUserPointsUpdate, [
          userId,
          newPoints,
          newLevel,
        ]),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [DatabaseService].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabaseService<T> extends _i1.Mock
    implements _i35.DatabaseService<T> {
  MockDatabaseService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i14.SupabaseClient get client =>
      (super.noSuchMethod(
            Invocation.getter(#client),
            returnValue: _FakeSupabaseClient_15(
              this,
              Invocation.getter(#client),
            ),
          )
          as _i14.SupabaseClient);

  @override
  String get tableName =>
      (super.noSuchMethod(
            Invocation.getter(#tableName),
            returnValue: _i25.dummyValue<String>(
              this,
              Invocation.getter(#tableName),
            ),
          )
          as String);

  @override
  T fromDatabaseRow(Map<String, dynamic>? data) =>
      (super.noSuchMethod(
            Invocation.method(#fromDatabaseRow, [data]),
            returnValue: _i25.dummyValue<T>(
              this,
              Invocation.method(#fromDatabaseRow, [data]),
            ),
          )
          as T);

  @override
  Map<String, dynamic> toDatabaseRow(T? entity, String? userId) =>
      (super.noSuchMethod(
            Invocation.method(#toDatabaseRow, [entity, userId]),
            returnValue: <String, dynamic>{},
          )
          as Map<String, dynamic>);

  @override
  _i21.Future<_i15.DatabaseResult<T?>> findById(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#findById, [id]),
            returnValue: _i21.Future<_i15.DatabaseResult<T?>>.value(
              _FakeDatabaseResult_16<T?>(
                this,
                Invocation.method(#findById, [id]),
              ),
            ),
          )
          as _i21.Future<_i15.DatabaseResult<T?>>);

  @override
  _i21.Future<_i15.DatabaseResult<List<T>>> findByUserId(String? userId) =>
      (super.noSuchMethod(
            Invocation.method(#findByUserId, [userId]),
            returnValue: _i21.Future<_i15.DatabaseResult<List<T>>>.value(
              _FakeDatabaseResult_16<List<T>>(
                this,
                Invocation.method(#findByUserId, [userId]),
              ),
            ),
          )
          as _i21.Future<_i15.DatabaseResult<List<T>>>);

  @override
  _i21.Future<_i15.DatabaseResult<List<T>>> findAll({int? limit}) =>
      (super.noSuchMethod(
            Invocation.method(#findAll, [], {#limit: limit}),
            returnValue: _i21.Future<_i15.DatabaseResult<List<T>>>.value(
              _FakeDatabaseResult_16<List<T>>(
                this,
                Invocation.method(#findAll, [], {#limit: limit}),
              ),
            ),
          )
          as _i21.Future<_i15.DatabaseResult<List<T>>>);

  @override
  _i21.Future<_i15.DatabaseResult<T>> create(T? entity, String? userId) =>
      (super.noSuchMethod(
            Invocation.method(#create, [entity, userId]),
            returnValue: _i21.Future<_i15.DatabaseResult<T>>.value(
              _FakeDatabaseResult_16<T>(
                this,
                Invocation.method(#create, [entity, userId]),
              ),
            ),
          )
          as _i21.Future<_i15.DatabaseResult<T>>);

  @override
  _i21.Future<_i15.DatabaseResult<T>> update(
    String? id,
    T? entity,
    String? userId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#update, [id, entity, userId]),
            returnValue: _i21.Future<_i15.DatabaseResult<T>>.value(
              _FakeDatabaseResult_16<T>(
                this,
                Invocation.method(#update, [id, entity, userId]),
              ),
            ),
          )
          as _i21.Future<_i15.DatabaseResult<T>>);

  @override
  _i21.Future<_i15.DatabaseResult<void>> delete(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#delete, [id]),
            returnValue: _i21.Future<_i15.DatabaseResult<void>>.value(
              _FakeDatabaseResult_16<void>(
                this,
                Invocation.method(#delete, [id]),
              ),
            ),
          )
          as _i21.Future<_i15.DatabaseResult<void>>);

  @override
  _i21.Future<_i15.DatabaseResult<void>> deleteByUserId(String? userId) =>
      (super.noSuchMethod(
            Invocation.method(#deleteByUserId, [userId]),
            returnValue: _i21.Future<_i15.DatabaseResult<void>>.value(
              _FakeDatabaseResult_16<void>(
                this,
                Invocation.method(#deleteByUserId, [userId]),
              ),
            ),
          )
          as _i21.Future<_i15.DatabaseResult<void>>);

  @override
  _i21.Future<_i15.DatabaseResult<List<T>>> createBatch(
    List<T>? entities,
    String? userId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#createBatch, [entities, userId]),
            returnValue: _i21.Future<_i15.DatabaseResult<List<T>>>.value(
              _FakeDatabaseResult_16<List<T>>(
                this,
                Invocation.method(#createBatch, [entities, userId]),
              ),
            ),
          )
          as _i21.Future<_i15.DatabaseResult<List<T>>>);

  @override
  _i21.Future<_i15.DatabaseResult<List<T>>> updateBatch(
    Map<String, T>? entitiesById,
    String? userId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updateBatch, [entitiesById, userId]),
            returnValue: _i21.Future<_i15.DatabaseResult<List<T>>>.value(
              _FakeDatabaseResult_16<List<T>>(
                this,
                Invocation.method(#updateBatch, [entitiesById, userId]),
              ),
            ),
          )
          as _i21.Future<_i15.DatabaseResult<List<T>>>);

  @override
  _i21.Future<_i15.DatabaseResult<void>> deleteBatch(List<String>? ids) =>
      (super.noSuchMethod(
            Invocation.method(#deleteBatch, [ids]),
            returnValue: _i21.Future<_i15.DatabaseResult<void>>.value(
              _FakeDatabaseResult_16<void>(
                this,
                Invocation.method(#deleteBatch, [ids]),
              ),
            ),
          )
          as _i21.Future<_i15.DatabaseResult<void>>);

  @override
  _i21.Future<_i15.DatabaseResult<int>> countByUserId(String? userId) =>
      (super.noSuchMethod(
            Invocation.method(#countByUserId, [userId]),
            returnValue: _i21.Future<_i15.DatabaseResult<int>>.value(
              _FakeDatabaseResult_16<int>(
                this,
                Invocation.method(#countByUserId, [userId]),
              ),
            ),
          )
          as _i21.Future<_i15.DatabaseResult<int>>);

  @override
  _i21.Future<_i15.DatabaseResult<bool>> existsById(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#existsById, [id]),
            returnValue: _i21.Future<_i15.DatabaseResult<bool>>.value(
              _FakeDatabaseResult_16<bool>(
                this,
                Invocation.method(#existsById, [id]),
              ),
            ),
          )
          as _i21.Future<_i15.DatabaseResult<bool>>);

  @override
  _i21.Stream<List<T>> subscribeToUserData(String? userId) =>
      (super.noSuchMethod(
            Invocation.method(#subscribeToUserData, [userId]),
            returnValue: _i21.Stream<List<T>>.empty(),
          )
          as _i21.Stream<List<T>>);

  @override
  _i21.Stream<T?> subscribeToEntity(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#subscribeToEntity, [id]),
            returnValue: _i21.Stream<T?>.empty(),
          )
          as _i21.Stream<T?>);

  @override
  _i21.Future<_i15.DatabaseResult<U>> executeWithRetry<U>({
    required String? operation,
    required _i21.Future<_i15.DatabaseResult<U>> Function()? action,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#executeWithRetry, [], {
              #operation: operation,
              #action: action,
            }),
            returnValue: _i21.Future<_i15.DatabaseResult<U>>.value(
              _FakeDatabaseResult_16<U>(
                this,
                Invocation.method(#executeWithRetry, [], {
                  #operation: operation,
                  #action: action,
                }),
              ),
            ),
          )
          as _i21.Future<_i15.DatabaseResult<U>>);

  @override
  _i21.Future<bool> testConnection() =>
      (super.noSuchMethod(
            Invocation.method(#testConnection, []),
            returnValue: _i21.Future<bool>.value(false),
          )
          as _i21.Future<bool>);

  @override
  _i21.Future<_i15.DatabaseResult<Map<String, dynamic>>> getHealthStatus() =>
      (super.noSuchMethod(
            Invocation.method(#getHealthStatus, []),
            returnValue:
                _i21.Future<_i15.DatabaseResult<Map<String, dynamic>>>.value(
                  _FakeDatabaseResult_16<Map<String, dynamic>>(
                    this,
                    Invocation.method(#getHealthStatus, []),
                  ),
                ),
          )
          as _i21.Future<_i15.DatabaseResult<Map<String, dynamic>>>);
}

/// A class which mocks [LocalStorageService].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocalStorageService extends _i1.Mock
    implements _i36.LocalStorageService {
  MockLocalStorageService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i21.Future<void> saveInventory(Map<String, dynamic>? inventoryData) =>
      (super.noSuchMethod(
            Invocation.method(#saveInventory, [inventoryData]),
            returnValue: _i21.Future<void>.value(),
            returnValueForMissingStub: _i21.Future<void>.value(),
          )
          as _i21.Future<void>);

  @override
  _i21.Future<Map<String, dynamic>?> getInventory() =>
      (super.noSuchMethod(
            Invocation.method(#getInventory, []),
            returnValue: _i21.Future<Map<String, dynamic>?>.value(),
          )
          as _i21.Future<Map<String, dynamic>?>);

  @override
  _i21.Future<void> clearInventory() =>
      (super.noSuchMethod(
            Invocation.method(#clearInventory, []),
            returnValue: _i21.Future<void>.value(),
            returnValueForMissingStub: _i21.Future<void>.value(),
          )
          as _i21.Future<void>);

  @override
  _i21.Future<void> saveSession(Map<String, dynamic>? sessionData) =>
      (super.noSuchMethod(
            Invocation.method(#saveSession, [sessionData]),
            returnValue: _i21.Future<void>.value(),
            returnValueForMissingStub: _i21.Future<void>.value(),
          )
          as _i21.Future<void>);

  @override
  _i21.Future<Map<String, dynamic>?> getSession() =>
      (super.noSuchMethod(
            Invocation.method(#getSession, []),
            returnValue: _i21.Future<Map<String, dynamic>?>.value(),
          )
          as _i21.Future<Map<String, dynamic>?>);

  @override
  _i21.Future<void> clearSession() =>
      (super.noSuchMethod(
            Invocation.method(#clearSession, []),
            returnValue: _i21.Future<void>.value(),
            returnValueForMissingStub: _i21.Future<void>.value(),
          )
          as _i21.Future<void>);

  @override
  _i21.Future<void> saveSettings(Map<String, dynamic>? settings) =>
      (super.noSuchMethod(
            Invocation.method(#saveSettings, [settings]),
            returnValue: _i21.Future<void>.value(),
            returnValueForMissingStub: _i21.Future<void>.value(),
          )
          as _i21.Future<void>);

  @override
  _i21.Future<Map<String, dynamic>?> getSettings() =>
      (super.noSuchMethod(
            Invocation.method(#getSettings, []),
            returnValue: _i21.Future<Map<String, dynamic>?>.value(),
          )
          as _i21.Future<Map<String, dynamic>?>);

  @override
  _i21.Future<void> clearAll() =>
      (super.noSuchMethod(
            Invocation.method(#clearAll, []),
            returnValue: _i21.Future<void>.value(),
            returnValueForMissingStub: _i21.Future<void>.value(),
          )
          as _i21.Future<void>);

  @override
  _i21.Future<bool> hasInventory() =>
      (super.noSuchMethod(
            Invocation.method(#hasInventory, []),
            returnValue: _i21.Future<bool>.value(false),
          )
          as _i21.Future<bool>);

  @override
  _i21.Future<bool> hasSession() =>
      (super.noSuchMethod(
            Invocation.method(#hasSession, []),
            returnValue: _i21.Future<bool>.value(false),
          )
          as _i21.Future<bool>);

  @override
  _i21.Future<Map<String, dynamic>> getStorageStats() =>
      (super.noSuchMethod(
            Invocation.method(#getStorageStats, []),
            returnValue: _i21.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i21.Future<Map<String, dynamic>>);
}

/// A class which mocks [SyncService].
///
/// See the documentation for Mockito's code generation for more information.
class MockSyncService extends _i1.Mock implements _i37.SyncService {
  MockSyncService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i21.Stream<_i16.GlobalSyncStatus> get globalSyncStream =>
      (super.noSuchMethod(
            Invocation.getter(#globalSyncStream),
            returnValue: _i21.Stream<_i16.GlobalSyncStatus>.empty(),
          )
          as _i21.Stream<_i16.GlobalSyncStatus>);

  @override
  _i16.GlobalSyncStatus get currentStatus =>
      (super.noSuchMethod(
            Invocation.getter(#currentStatus),
            returnValue: _FakeGlobalSyncStatus_17(
              this,
              Invocation.getter(#currentStatus),
            ),
          )
          as _i16.GlobalSyncStatus);

  @override
  bool get isSyncing =>
      (super.noSuchMethod(Invocation.getter(#isSyncing), returnValue: false)
          as bool);

  @override
  bool get isOnline =>
      (super.noSuchMethod(Invocation.getter(#isOnline), returnValue: false)
          as bool);

  @override
  _i21.Future<void> syncAllData({bool? forceSync = false}) =>
      (super.noSuchMethod(
            Invocation.method(#syncAllData, [], {#forceSync: forceSync}),
            returnValue: _i21.Future<void>.value(),
            returnValueForMissingStub: _i21.Future<void>.value(),
          )
          as _i21.Future<void>);

  @override
  _i21.Future<void> syncDataType(String? dataType) =>
      (super.noSuchMethod(
            Invocation.method(#syncDataType, [dataType]),
            returnValue: _i21.Future<void>.value(),
            returnValueForMissingStub: _i21.Future<void>.value(),
          )
          as _i21.Future<void>);

  @override
  _i21.Future<void> handleOptimisticUpdate({
    required String? dataType,
    required String? operation,
    required Map<String, dynamic>? localData,
    required _i21.Future<void> Function()? serverUpdate,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#handleOptimisticUpdate, [], {
              #dataType: dataType,
              #operation: operation,
              #localData: localData,
              #serverUpdate: serverUpdate,
            }),
            returnValue: _i21.Future<void>.value(),
            returnValueForMissingStub: _i21.Future<void>.value(),
          )
          as _i21.Future<void>);

  @override
  _i21.Future<void> refreshAllData() =>
      (super.noSuchMethod(
            Invocation.method(#refreshAllData, []),
            returnValue: _i21.Future<void>.value(),
            returnValueForMissingStub: _i21.Future<void>.value(),
          )
          as _i21.Future<void>);

  @override
  Map<String, dynamic> getSyncStatistics() =>
      (super.noSuchMethod(
            Invocation.method(#getSyncStatistics, []),
            returnValue: <String, dynamic>{},
          )
          as Map<String, dynamic>);

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [ObjectDetector].
///
/// See the documentation for Mockito's code generation for more information.
class MockObjectDetector extends _i1.Mock implements _i17.ObjectDetector {
  MockObjectDetector() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i17.ObjectDetectorOptions get options =>
      (super.noSuchMethod(
            Invocation.getter(#options),
            returnValue: _FakeObjectDetectorOptions_18(
              this,
              Invocation.getter(#options),
            ),
          )
          as _i17.ObjectDetectorOptions);

  @override
  String get id =>
      (super.noSuchMethod(
            Invocation.getter(#id),
            returnValue: _i25.dummyValue<String>(this, Invocation.getter(#id)),
          )
          as String);

  @override
  _i21.Future<List<_i17.DetectedObject>> processImage(
    _i17.InputImage? inputImage,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#processImage, [inputImage]),
            returnValue: _i21.Future<List<_i17.DetectedObject>>.value(
              <_i17.DetectedObject>[],
            ),
          )
          as _i21.Future<List<_i17.DetectedObject>>);

  @override
  _i21.Future<void> close() =>
      (super.noSuchMethod(
            Invocation.method(#close, []),
            returnValue: _i21.Future<void>.value(),
            returnValueForMissingStub: _i21.Future<void>.value(),
          )
          as _i21.Future<void>);
}

/// A class which mocks [CameraController].
///
/// See the documentation for Mockito's code generation for more information.
class MockCameraController extends _i1.Mock implements _i19.CameraController {
  MockCameraController() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i18.MediaSettings get mediaSettings =>
      (super.noSuchMethod(
            Invocation.getter(#mediaSettings),
            returnValue: _FakeMediaSettings_19(
              this,
              Invocation.getter(#mediaSettings),
            ),
          )
          as _i18.MediaSettings);

  @override
  _i19.CameraDescription get description =>
      (super.noSuchMethod(
            Invocation.getter(#description),
            returnValue: _FakeCameraDescription_20(
              this,
              Invocation.getter(#description),
            ),
          )
          as _i19.CameraDescription);

  @override
  _i19.ResolutionPreset get resolutionPreset =>
      (super.noSuchMethod(
            Invocation.getter(#resolutionPreset),
            returnValue: _i19.ResolutionPreset.low,
          )
          as _i19.ResolutionPreset);

  @override
  bool get enableAudio =>
      (super.noSuchMethod(Invocation.getter(#enableAudio), returnValue: false)
          as bool);

  @override
  int get cameraId =>
      (super.noSuchMethod(Invocation.getter(#cameraId), returnValue: 0) as int);

  @override
  _i19.CameraValue get value =>
      (super.noSuchMethod(
            Invocation.getter(#value),
            returnValue: _FakeCameraValue_21(this, Invocation.getter(#value)),
          )
          as _i19.CameraValue);

  @override
  set value(_i19.CameraValue? newValue) => super.noSuchMethod(
    Invocation.setter(#value, newValue),
    returnValueForMissingStub: null,
  );

  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);

  @override
  void debugCheckIsDisposed() => super.noSuchMethod(
    Invocation.method(#debugCheckIsDisposed, []),
    returnValueForMissingStub: null,
  );

  @override
  _i21.Future<void> initialize() =>
      (super.noSuchMethod(
            Invocation.method(#initialize, []),
            returnValue: _i21.Future<void>.value(),
            returnValueForMissingStub: _i21.Future<void>.value(),
          )
          as _i21.Future<void>);

  @override
  _i21.Future<void> prepareForVideoRecording() =>
      (super.noSuchMethod(
            Invocation.method(#prepareForVideoRecording, []),
            returnValue: _i21.Future<void>.value(),
            returnValueForMissingStub: _i21.Future<void>.value(),
          )
          as _i21.Future<void>);

  @override
  _i21.Future<void> pausePreview() =>
      (super.noSuchMethod(
            Invocation.method(#pausePreview, []),
            returnValue: _i21.Future<void>.value(),
            returnValueForMissingStub: _i21.Future<void>.value(),
          )
          as _i21.Future<void>);

  @override
  _i21.Future<void> resumePreview() =>
      (super.noSuchMethod(
            Invocation.method(#resumePreview, []),
            returnValue: _i21.Future<void>.value(),
            returnValueForMissingStub: _i21.Future<void>.value(),
          )
          as _i21.Future<void>);

  @override
  _i21.Future<void> setDescription(_i19.CameraDescription? description) =>
      (super.noSuchMethod(
            Invocation.method(#setDescription, [description]),
            returnValue: _i21.Future<void>.value(),
            returnValueForMissingStub: _i21.Future<void>.value(),
          )
          as _i21.Future<void>);

  @override
  _i21.Future<_i19.XFile> takePicture() =>
      (super.noSuchMethod(
            Invocation.method(#takePicture, []),
            returnValue: _i21.Future<_i19.XFile>.value(
              _FakeXFile_22(this, Invocation.method(#takePicture, [])),
            ),
          )
          as _i21.Future<_i19.XFile>);

  @override
  _i21.Future<void> startImageStream(
    _i19.onLatestImageAvailable? onAvailable,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#startImageStream, [onAvailable]),
            returnValue: _i21.Future<void>.value(),
            returnValueForMissingStub: _i21.Future<void>.value(),
          )
          as _i21.Future<void>);

  @override
  _i21.Future<void> stopImageStream() =>
      (super.noSuchMethod(
            Invocation.method(#stopImageStream, []),
            returnValue: _i21.Future<void>.value(),
            returnValueForMissingStub: _i21.Future<void>.value(),
          )
          as _i21.Future<void>);

  @override
  _i21.Future<void> startVideoRecording({
    _i19.onLatestImageAvailable? onAvailable,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#startVideoRecording, [], {
              #onAvailable: onAvailable,
            }),
            returnValue: _i21.Future<void>.value(),
            returnValueForMissingStub: _i21.Future<void>.value(),
          )
          as _i21.Future<void>);

  @override
  _i21.Future<_i19.XFile> stopVideoRecording() =>
      (super.noSuchMethod(
            Invocation.method(#stopVideoRecording, []),
            returnValue: _i21.Future<_i19.XFile>.value(
              _FakeXFile_22(this, Invocation.method(#stopVideoRecording, [])),
            ),
          )
          as _i21.Future<_i19.XFile>);

  @override
  _i21.Future<void> pauseVideoRecording() =>
      (super.noSuchMethod(
            Invocation.method(#pauseVideoRecording, []),
            returnValue: _i21.Future<void>.value(),
            returnValueForMissingStub: _i21.Future<void>.value(),
          )
          as _i21.Future<void>);

  @override
  _i21.Future<void> resumeVideoRecording() =>
      (super.noSuchMethod(
            Invocation.method(#resumeVideoRecording, []),
            returnValue: _i21.Future<void>.value(),
            returnValueForMissingStub: _i21.Future<void>.value(),
          )
          as _i21.Future<void>);

  @override
  _i3.Widget buildPreview() =>
      (super.noSuchMethod(
            Invocation.method(#buildPreview, []),
            returnValue: _FakeWidget_23(
              this,
              Invocation.method(#buildPreview, []),
            ),
          )
          as _i3.Widget);

  @override
  _i21.Future<double> getMaxZoomLevel() =>
      (super.noSuchMethod(
            Invocation.method(#getMaxZoomLevel, []),
            returnValue: _i21.Future<double>.value(0.0),
          )
          as _i21.Future<double>);

  @override
  _i21.Future<double> getMinZoomLevel() =>
      (super.noSuchMethod(
            Invocation.method(#getMinZoomLevel, []),
            returnValue: _i21.Future<double>.value(0.0),
          )
          as _i21.Future<double>);

  @override
  _i21.Future<void> setZoomLevel(double? zoom) =>
      (super.noSuchMethod(
            Invocation.method(#setZoomLevel, [zoom]),
            returnValue: _i21.Future<void>.value(),
            returnValueForMissingStub: _i21.Future<void>.value(),
          )
          as _i21.Future<void>);

  @override
  _i21.Future<void> setFlashMode(_i19.FlashMode? mode) =>
      (super.noSuchMethod(
            Invocation.method(#setFlashMode, [mode]),
            returnValue: _i21.Future<void>.value(),
            returnValueForMissingStub: _i21.Future<void>.value(),
          )
          as _i21.Future<void>);

  @override
  _i21.Future<void> setExposureMode(_i19.ExposureMode? mode) =>
      (super.noSuchMethod(
            Invocation.method(#setExposureMode, [mode]),
            returnValue: _i21.Future<void>.value(),
            returnValueForMissingStub: _i21.Future<void>.value(),
          )
          as _i21.Future<void>);

  @override
  _i21.Future<void> setExposurePoint(_i9.Offset? point) =>
      (super.noSuchMethod(
            Invocation.method(#setExposurePoint, [point]),
            returnValue: _i21.Future<void>.value(),
            returnValueForMissingStub: _i21.Future<void>.value(),
          )
          as _i21.Future<void>);

  @override
  _i21.Future<double> getMinExposureOffset() =>
      (super.noSuchMethod(
            Invocation.method(#getMinExposureOffset, []),
            returnValue: _i21.Future<double>.value(0.0),
          )
          as _i21.Future<double>);

  @override
  _i21.Future<double> getMaxExposureOffset() =>
      (super.noSuchMethod(
            Invocation.method(#getMaxExposureOffset, []),
            returnValue: _i21.Future<double>.value(0.0),
          )
          as _i21.Future<double>);

  @override
  _i21.Future<double> getExposureOffsetStepSize() =>
      (super.noSuchMethod(
            Invocation.method(#getExposureOffsetStepSize, []),
            returnValue: _i21.Future<double>.value(0.0),
          )
          as _i21.Future<double>);

  @override
  _i21.Future<double> setExposureOffset(double? offset) =>
      (super.noSuchMethod(
            Invocation.method(#setExposureOffset, [offset]),
            returnValue: _i21.Future<double>.value(0.0),
          )
          as _i21.Future<double>);

  @override
  _i21.Future<void> lockCaptureOrientation([
    _i38.DeviceOrientation? orientation,
  ]) =>
      (super.noSuchMethod(
            Invocation.method(#lockCaptureOrientation, [orientation]),
            returnValue: _i21.Future<void>.value(),
            returnValueForMissingStub: _i21.Future<void>.value(),
          )
          as _i21.Future<void>);

  @override
  _i21.Future<void> setFocusMode(_i19.FocusMode? mode) =>
      (super.noSuchMethod(
            Invocation.method(#setFocusMode, [mode]),
            returnValue: _i21.Future<void>.value(),
            returnValueForMissingStub: _i21.Future<void>.value(),
          )
          as _i21.Future<void>);

  @override
  _i21.Future<void> unlockCaptureOrientation() =>
      (super.noSuchMethod(
            Invocation.method(#unlockCaptureOrientation, []),
            returnValue: _i21.Future<void>.value(),
            returnValueForMissingStub: _i21.Future<void>.value(),
          )
          as _i21.Future<void>);

  @override
  _i21.Future<void> setFocusPoint(_i9.Offset? point) =>
      (super.noSuchMethod(
            Invocation.method(#setFocusPoint, [point]),
            returnValue: _i21.Future<void>.value(),
            returnValueForMissingStub: _i21.Future<void>.value(),
          )
          as _i21.Future<void>);

  @override
  bool supportsImageStreaming() =>
      (super.noSuchMethod(
            Invocation.method(#supportsImageStreaming, []),
            returnValue: false,
          )
          as bool);

  @override
  _i21.Future<void> dispose() =>
      (super.noSuchMethod(
            Invocation.method(#dispose, []),
            returnValue: _i21.Future<void>.value(),
            returnValueForMissingStub: _i21.Future<void>.value(),
          )
          as _i21.Future<void>);

  @override
  void removeListener(_i9.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void addListener(_i9.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [Position].
///
/// See the documentation for Mockito's code generation for more information.
// ignore: must_be_immutable
class MockPosition extends _i1.Mock implements _i39.Position {
  MockPosition() {
    _i1.throwOnMissingStub(this);
  }

  @override
  double get latitude =>
      (super.noSuchMethod(Invocation.getter(#latitude), returnValue: 0.0)
          as double);

  @override
  double get longitude =>
      (super.noSuchMethod(Invocation.getter(#longitude), returnValue: 0.0)
          as double);

  @override
  DateTime get timestamp =>
      (super.noSuchMethod(
            Invocation.getter(#timestamp),
            returnValue: _FakeDateTime_24(this, Invocation.getter(#timestamp)),
          )
          as DateTime);

  @override
  double get altitude =>
      (super.noSuchMethod(Invocation.getter(#altitude), returnValue: 0.0)
          as double);

  @override
  double get altitudeAccuracy =>
      (super.noSuchMethod(
            Invocation.getter(#altitudeAccuracy),
            returnValue: 0.0,
          )
          as double);

  @override
  double get accuracy =>
      (super.noSuchMethod(Invocation.getter(#accuracy), returnValue: 0.0)
          as double);

  @override
  double get heading =>
      (super.noSuchMethod(Invocation.getter(#heading), returnValue: 0.0)
          as double);

  @override
  double get headingAccuracy =>
      (super.noSuchMethod(Invocation.getter(#headingAccuracy), returnValue: 0.0)
          as double);

  @override
  double get speed =>
      (super.noSuchMethod(Invocation.getter(#speed), returnValue: 0.0)
          as double);

  @override
  double get speedAccuracy =>
      (super.noSuchMethod(Invocation.getter(#speedAccuracy), returnValue: 0.0)
          as double);

  @override
  bool get isMocked =>
      (super.noSuchMethod(Invocation.getter(#isMocked), returnValue: false)
          as bool);

  @override
  Map<String, dynamic> toJson() =>
      (super.noSuchMethod(
            Invocation.method(#toJson, []),
            returnValue: <String, dynamic>{},
          )
          as Map<String, dynamic>);
}

/// A class which mocks [SupabaseClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockSupabaseClient extends _i1.Mock implements _i14.SupabaseClient {
  MockSupabaseClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i14.FunctionsClient get functions =>
      (super.noSuchMethod(
            Invocation.getter(#functions),
            returnValue: _FakeFunctionsClient_25(
              this,
              Invocation.getter(#functions),
            ),
          )
          as _i14.FunctionsClient);

  @override
  _i14.SupabaseStorageClient get storage =>
      (super.noSuchMethod(
            Invocation.getter(#storage),
            returnValue: _FakeSupabaseStorageClient_26(
              this,
              Invocation.getter(#storage),
            ),
          )
          as _i14.SupabaseStorageClient);

  @override
  _i14.RealtimeClient get realtime =>
      (super.noSuchMethod(
            Invocation.getter(#realtime),
            returnValue: _FakeRealtimeClient_27(
              this,
              Invocation.getter(#realtime),
            ),
          )
          as _i14.RealtimeClient);

  @override
  _i14.PostgrestClient get rest =>
      (super.noSuchMethod(
            Invocation.getter(#rest),
            returnValue: _FakePostgrestClient_28(
              this,
              Invocation.getter(#rest),
            ),
          )
          as _i14.PostgrestClient);

  @override
  Map<String, String> get headers =>
      (super.noSuchMethod(
            Invocation.getter(#headers),
            returnValue: <String, String>{},
          )
          as Map<String, String>);

  @override
  _i14.GoTrueClient get auth =>
      (super.noSuchMethod(
            Invocation.getter(#auth),
            returnValue: _FakeGoTrueClient_29(this, Invocation.getter(#auth)),
          )
          as _i14.GoTrueClient);

  @override
  set functions(_i14.FunctionsClient? _functions) => super.noSuchMethod(
    Invocation.setter(#functions, _functions),
    returnValueForMissingStub: null,
  );

  @override
  set storage(_i14.SupabaseStorageClient? _storage) => super.noSuchMethod(
    Invocation.setter(#storage, _storage),
    returnValueForMissingStub: null,
  );

  @override
  set realtime(_i14.RealtimeClient? _realtime) => super.noSuchMethod(
    Invocation.setter(#realtime, _realtime),
    returnValueForMissingStub: null,
  );

  @override
  set rest(_i14.PostgrestClient? _rest) => super.noSuchMethod(
    Invocation.setter(#rest, _rest),
    returnValueForMissingStub: null,
  );

  @override
  set headers(Map<String, String>? headers) => super.noSuchMethod(
    Invocation.setter(#headers, headers),
    returnValueForMissingStub: null,
  );

  @override
  _i14.SupabaseQueryBuilder from(String? table) =>
      (super.noSuchMethod(
            Invocation.method(#from, [table]),
            returnValue: _FakeSupabaseQueryBuilder_30(
              this,
              Invocation.method(#from, [table]),
            ),
          )
          as _i14.SupabaseQueryBuilder);

  @override
  _i14.SupabaseQuerySchema schema(String? schema) =>
      (super.noSuchMethod(
            Invocation.method(#schema, [schema]),
            returnValue: _FakeSupabaseQuerySchema_31(
              this,
              Invocation.method(#schema, [schema]),
            ),
          )
          as _i14.SupabaseQuerySchema);

  @override
  _i14.PostgrestFilterBuilder<T> rpc<T>(
    String? fn, {
    Map<String, dynamic>? params,
    dynamic get = false,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#rpc, [fn], {#params: params, #get: get}),
            returnValue: _FakePostgrestFilterBuilder_32<T>(
              this,
              Invocation.method(#rpc, [fn], {#params: params, #get: get}),
            ),
          )
          as _i14.PostgrestFilterBuilder<T>);

  @override
  _i14.RealtimeChannel channel(
    String? name, {
    _i14.RealtimeChannelConfig? opts = const _i14.RealtimeChannelConfig(),
  }) =>
      (super.noSuchMethod(
            Invocation.method(#channel, [name], {#opts: opts}),
            returnValue: _FakeRealtimeChannel_33(
              this,
              Invocation.method(#channel, [name], {#opts: opts}),
            ),
          )
          as _i14.RealtimeChannel);

  @override
  List<_i14.RealtimeChannel> getChannels() =>
      (super.noSuchMethod(
            Invocation.method(#getChannels, []),
            returnValue: <_i14.RealtimeChannel>[],
          )
          as List<_i14.RealtimeChannel>);

  @override
  _i21.Future<String> removeChannel(_i14.RealtimeChannel? channel) =>
      (super.noSuchMethod(
            Invocation.method(#removeChannel, [channel]),
            returnValue: _i21.Future<String>.value(
              _i25.dummyValue<String>(
                this,
                Invocation.method(#removeChannel, [channel]),
              ),
            ),
          )
          as _i21.Future<String>);

  @override
  _i21.Future<List<String>> removeAllChannels() =>
      (super.noSuchMethod(
            Invocation.method(#removeAllChannels, []),
            returnValue: _i21.Future<List<String>>.value(<String>[]),
          )
          as _i21.Future<List<String>>);

  @override
  _i21.Future<void> dispose() =>
      (super.noSuchMethod(
            Invocation.method(#dispose, []),
            returnValue: _i21.Future<void>.value(),
            returnValueForMissingStub: _i21.Future<void>.value(),
          )
          as _i21.Future<void>);
}

/// A class which mocks [GoTrueClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockGoTrueClient extends _i1.Mock implements _i14.GoTrueClient {
  MockGoTrueClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i14.GoTrueAdminApi get admin =>
      (super.noSuchMethod(
            Invocation.getter(#admin),
            returnValue: _FakeGoTrueAdminApi_34(
              this,
              Invocation.getter(#admin),
            ),
          )
          as _i14.GoTrueAdminApi);

  @override
  _i14.GoTrueMFAApi get mfa =>
      (super.noSuchMethod(
            Invocation.getter(#mfa),
            returnValue: _FakeGoTrueMFAApi_35(this, Invocation.getter(#mfa)),
          )
          as _i14.GoTrueMFAApi);

  @override
  _i21.Stream<_i14.AuthState> get onAuthStateChange =>
      (super.noSuchMethod(
            Invocation.getter(#onAuthStateChange),
            returnValue: _i21.Stream<_i14.AuthState>.empty(),
          )
          as _i21.Stream<_i14.AuthState>);

  @override
  _i21.Stream<_i14.AuthState> get onAuthStateChangeSync =>
      (super.noSuchMethod(
            Invocation.getter(#onAuthStateChangeSync),
            returnValue: _i21.Stream<_i14.AuthState>.empty(),
          )
          as _i21.Stream<_i14.AuthState>);

  @override
  Map<String, String> get headers =>
      (super.noSuchMethod(
            Invocation.getter(#headers),
            returnValue: <String, String>{},
          )
          as Map<String, String>);

  @override
  set admin(_i14.GoTrueAdminApi? _admin) => super.noSuchMethod(
    Invocation.setter(#admin, _admin),
    returnValueForMissingStub: null,
  );

  @override
  set mfa(_i14.GoTrueMFAApi? _mfa) => super.noSuchMethod(
    Invocation.setter(#mfa, _mfa),
    returnValueForMissingStub: null,
  );

  @override
  _i21.Future<_i14.AuthResponse> signInAnonymously({
    Map<String, dynamic>? data,
    String? captchaToken,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#signInAnonymously, [], {
              #data: data,
              #captchaToken: captchaToken,
            }),
            returnValue: _i21.Future<_i14.AuthResponse>.value(
              _FakeAuthResponse_36(
                this,
                Invocation.method(#signInAnonymously, [], {
                  #data: data,
                  #captchaToken: captchaToken,
                }),
              ),
            ),
          )
          as _i21.Future<_i14.AuthResponse>);

  @override
  _i21.Future<_i14.AuthResponse> signUp({
    String? email,
    String? phone,
    required String? password,
    String? emailRedirectTo,
    Map<String, dynamic>? data,
    String? captchaToken,
    _i14.OtpChannel? channel = _i14.OtpChannel.sms,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#signUp, [], {
              #email: email,
              #phone: phone,
              #password: password,
              #emailRedirectTo: emailRedirectTo,
              #data: data,
              #captchaToken: captchaToken,
              #channel: channel,
            }),
            returnValue: _i21.Future<_i14.AuthResponse>.value(
              _FakeAuthResponse_36(
                this,
                Invocation.method(#signUp, [], {
                  #email: email,
                  #phone: phone,
                  #password: password,
                  #emailRedirectTo: emailRedirectTo,
                  #data: data,
                  #captchaToken: captchaToken,
                  #channel: channel,
                }),
              ),
            ),
          )
          as _i21.Future<_i14.AuthResponse>);

  @override
  _i21.Future<_i14.AuthResponse> signInWithPassword({
    String? email,
    String? phone,
    required String? password,
    String? captchaToken,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#signInWithPassword, [], {
              #email: email,
              #phone: phone,
              #password: password,
              #captchaToken: captchaToken,
            }),
            returnValue: _i21.Future<_i14.AuthResponse>.value(
              _FakeAuthResponse_36(
                this,
                Invocation.method(#signInWithPassword, [], {
                  #email: email,
                  #phone: phone,
                  #password: password,
                  #captchaToken: captchaToken,
                }),
              ),
            ),
          )
          as _i21.Future<_i14.AuthResponse>);

  @override
  _i21.Future<_i14.OAuthResponse> getOAuthSignInUrl({
    required _i14.OAuthProvider? provider,
    String? redirectTo,
    String? scopes,
    Map<String, String>? queryParams,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getOAuthSignInUrl, [], {
              #provider: provider,
              #redirectTo: redirectTo,
              #scopes: scopes,
              #queryParams: queryParams,
            }),
            returnValue: _i21.Future<_i14.OAuthResponse>.value(
              _FakeOAuthResponse_37(
                this,
                Invocation.method(#getOAuthSignInUrl, [], {
                  #provider: provider,
                  #redirectTo: redirectTo,
                  #scopes: scopes,
                  #queryParams: queryParams,
                }),
              ),
            ),
          )
          as _i21.Future<_i14.OAuthResponse>);

  @override
  _i21.Future<_i14.AuthSessionUrlResponse> exchangeCodeForSession(
    String? authCode,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#exchangeCodeForSession, [authCode]),
            returnValue: _i21.Future<_i14.AuthSessionUrlResponse>.value(
              _FakeAuthSessionUrlResponse_38(
                this,
                Invocation.method(#exchangeCodeForSession, [authCode]),
              ),
            ),
          )
          as _i21.Future<_i14.AuthSessionUrlResponse>);

  @override
  _i21.Future<_i14.AuthResponse> signInWithIdToken({
    required _i14.OAuthProvider? provider,
    required String? idToken,
    String? accessToken,
    String? nonce,
    String? captchaToken,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#signInWithIdToken, [], {
              #provider: provider,
              #idToken: idToken,
              #accessToken: accessToken,
              #nonce: nonce,
              #captchaToken: captchaToken,
            }),
            returnValue: _i21.Future<_i14.AuthResponse>.value(
              _FakeAuthResponse_36(
                this,
                Invocation.method(#signInWithIdToken, [], {
                  #provider: provider,
                  #idToken: idToken,
                  #accessToken: accessToken,
                  #nonce: nonce,
                  #captchaToken: captchaToken,
                }),
              ),
            ),
          )
          as _i21.Future<_i14.AuthResponse>);

  @override
  _i21.Future<void> signInWithOtp({
    String? email,
    String? phone,
    String? emailRedirectTo,
    bool? shouldCreateUser,
    Map<String, dynamic>? data,
    String? captchaToken,
    _i14.OtpChannel? channel = _i14.OtpChannel.sms,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#signInWithOtp, [], {
              #email: email,
              #phone: phone,
              #emailRedirectTo: emailRedirectTo,
              #shouldCreateUser: shouldCreateUser,
              #data: data,
              #captchaToken: captchaToken,
              #channel: channel,
            }),
            returnValue: _i21.Future<void>.value(),
            returnValueForMissingStub: _i21.Future<void>.value(),
          )
          as _i21.Future<void>);

  @override
  _i21.Future<_i14.AuthResponse> verifyOTP({
    String? email,
    String? phone,
    String? token,
    required _i14.OtpType? type,
    String? redirectTo,
    String? captchaToken,
    String? tokenHash,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#verifyOTP, [], {
              #email: email,
              #phone: phone,
              #token: token,
              #type: type,
              #redirectTo: redirectTo,
              #captchaToken: captchaToken,
              #tokenHash: tokenHash,
            }),
            returnValue: _i21.Future<_i14.AuthResponse>.value(
              _FakeAuthResponse_36(
                this,
                Invocation.method(#verifyOTP, [], {
                  #email: email,
                  #phone: phone,
                  #token: token,
                  #type: type,
                  #redirectTo: redirectTo,
                  #captchaToken: captchaToken,
                  #tokenHash: tokenHash,
                }),
              ),
            ),
          )
          as _i21.Future<_i14.AuthResponse>);

  @override
  _i21.Future<String> getSSOSignInUrl({
    String? providerId,
    String? domain,
    String? redirectTo,
    String? captchaToken,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getSSOSignInUrl, [], {
              #providerId: providerId,
              #domain: domain,
              #redirectTo: redirectTo,
              #captchaToken: captchaToken,
            }),
            returnValue: _i21.Future<String>.value(
              _i25.dummyValue<String>(
                this,
                Invocation.method(#getSSOSignInUrl, [], {
                  #providerId: providerId,
                  #domain: domain,
                  #redirectTo: redirectTo,
                  #captchaToken: captchaToken,
                }),
              ),
            ),
          )
          as _i21.Future<String>);

  @override
  _i21.Future<_i14.AuthResponse> refreshSession([String? refreshToken]) =>
      (super.noSuchMethod(
            Invocation.method(#refreshSession, [refreshToken]),
            returnValue: _i21.Future<_i14.AuthResponse>.value(
              _FakeAuthResponse_36(
                this,
                Invocation.method(#refreshSession, [refreshToken]),
              ),
            ),
          )
          as _i21.Future<_i14.AuthResponse>);

  @override
  _i21.Future<void> reauthenticate() =>
      (super.noSuchMethod(
            Invocation.method(#reauthenticate, []),
            returnValue: _i21.Future<void>.value(),
            returnValueForMissingStub: _i21.Future<void>.value(),
          )
          as _i21.Future<void>);

  @override
  _i21.Future<_i14.ResendResponse> resend({
    String? email,
    String? phone,
    required _i14.OtpType? type,
    String? emailRedirectTo,
    String? captchaToken,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#resend, [], {
              #email: email,
              #phone: phone,
              #type: type,
              #emailRedirectTo: emailRedirectTo,
              #captchaToken: captchaToken,
            }),
            returnValue: _i21.Future<_i14.ResendResponse>.value(
              _FakeResendResponse_39(
                this,
                Invocation.method(#resend, [], {
                  #email: email,
                  #phone: phone,
                  #type: type,
                  #emailRedirectTo: emailRedirectTo,
                  #captchaToken: captchaToken,
                }),
              ),
            ),
          )
          as _i21.Future<_i14.ResendResponse>);

  @override
  _i21.Future<_i14.UserResponse> getUser([String? jwt]) =>
      (super.noSuchMethod(
            Invocation.method(#getUser, [jwt]),
            returnValue: _i21.Future<_i14.UserResponse>.value(
              _FakeUserResponse_40(this, Invocation.method(#getUser, [jwt])),
            ),
          )
          as _i21.Future<_i14.UserResponse>);

  @override
  _i21.Future<_i14.UserResponse> updateUser(
    _i14.UserAttributes? attributes, {
    String? emailRedirectTo,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #updateUser,
              [attributes],
              {#emailRedirectTo: emailRedirectTo},
            ),
            returnValue: _i21.Future<_i14.UserResponse>.value(
              _FakeUserResponse_40(
                this,
                Invocation.method(
                  #updateUser,
                  [attributes],
                  {#emailRedirectTo: emailRedirectTo},
                ),
              ),
            ),
          )
          as _i21.Future<_i14.UserResponse>);

  @override
  _i21.Future<_i14.AuthResponse> setSession(String? refreshToken) =>
      (super.noSuchMethod(
            Invocation.method(#setSession, [refreshToken]),
            returnValue: _i21.Future<_i14.AuthResponse>.value(
              _FakeAuthResponse_36(
                this,
                Invocation.method(#setSession, [refreshToken]),
              ),
            ),
          )
          as _i21.Future<_i14.AuthResponse>);

  @override
  _i21.Future<_i14.AuthSessionUrlResponse> getSessionFromUrl(
    Uri? originUrl, {
    bool? storeSession = true,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #getSessionFromUrl,
              [originUrl],
              {#storeSession: storeSession},
            ),
            returnValue: _i21.Future<_i14.AuthSessionUrlResponse>.value(
              _FakeAuthSessionUrlResponse_38(
                this,
                Invocation.method(
                  #getSessionFromUrl,
                  [originUrl],
                  {#storeSession: storeSession},
                ),
              ),
            ),
          )
          as _i21.Future<_i14.AuthSessionUrlResponse>);

  @override
  _i21.Future<void> signOut({
    _i14.SignOutScope? scope = _i14.SignOutScope.local,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#signOut, [], {#scope: scope}),
            returnValue: _i21.Future<void>.value(),
            returnValueForMissingStub: _i21.Future<void>.value(),
          )
          as _i21.Future<void>);

  @override
  _i21.Future<void> resetPasswordForEmail(
    String? email, {
    String? redirectTo,
    String? captchaToken,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #resetPasswordForEmail,
              [email],
              {#redirectTo: redirectTo, #captchaToken: captchaToken},
            ),
            returnValue: _i21.Future<void>.value(),
            returnValueForMissingStub: _i21.Future<void>.value(),
          )
          as _i21.Future<void>);

  @override
  _i21.Future<List<_i14.UserIdentity>> getUserIdentities() =>
      (super.noSuchMethod(
            Invocation.method(#getUserIdentities, []),
            returnValue: _i21.Future<List<_i14.UserIdentity>>.value(
              <_i14.UserIdentity>[],
            ),
          )
          as _i21.Future<List<_i14.UserIdentity>>);

  @override
  _i21.Future<_i14.OAuthResponse> getLinkIdentityUrl(
    _i14.OAuthProvider? provider, {
    String? redirectTo,
    String? scopes,
    Map<String, String>? queryParams,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #getLinkIdentityUrl,
              [provider],
              {
                #redirectTo: redirectTo,
                #scopes: scopes,
                #queryParams: queryParams,
              },
            ),
            returnValue: _i21.Future<_i14.OAuthResponse>.value(
              _FakeOAuthResponse_37(
                this,
                Invocation.method(
                  #getLinkIdentityUrl,
                  [provider],
                  {
                    #redirectTo: redirectTo,
                    #scopes: scopes,
                    #queryParams: queryParams,
                  },
                ),
              ),
            ),
          )
          as _i21.Future<_i14.OAuthResponse>);

  @override
  _i21.Future<void> unlinkIdentity(_i14.UserIdentity? identity) =>
      (super.noSuchMethod(
            Invocation.method(#unlinkIdentity, [identity]),
            returnValue: _i21.Future<void>.value(),
            returnValueForMissingStub: _i21.Future<void>.value(),
          )
          as _i21.Future<void>);

  @override
  _i21.Future<void> setInitialSession(String? jsonStr) =>
      (super.noSuchMethod(
            Invocation.method(#setInitialSession, [jsonStr]),
            returnValue: _i21.Future<void>.value(),
            returnValueForMissingStub: _i21.Future<void>.value(),
          )
          as _i21.Future<void>);

  @override
  _i21.Future<_i14.AuthResponse> recoverSession(String? jsonStr) =>
      (super.noSuchMethod(
            Invocation.method(#recoverSession, [jsonStr]),
            returnValue: _i21.Future<_i14.AuthResponse>.value(
              _FakeAuthResponse_36(
                this,
                Invocation.method(#recoverSession, [jsonStr]),
              ),
            ),
          )
          as _i21.Future<_i14.AuthResponse>);

  @override
  void startAutoRefresh() => super.noSuchMethod(
    Invocation.method(#startAutoRefresh, []),
    returnValueForMissingStub: null,
  );

  @override
  void stopAutoRefresh() => super.noSuchMethod(
    Invocation.method(#stopAutoRefresh, []),
    returnValueForMissingStub: null,
  );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void notifyAllSubscribers(
    _i14.AuthChangeEvent? event, {
    _i14.Session? session,
    bool? broadcast = true,
  }) => super.noSuchMethod(
    Invocation.method(
      #notifyAllSubscribers,
      [event],
      {#session: session, #broadcast: broadcast},
    ),
    returnValueForMissingStub: null,
  );

  @override
  Object notifyException(Object? exception, [StackTrace? stackTrace]) =>
      (super.noSuchMethod(
            Invocation.method(#notifyException, [exception, stackTrace]),
            returnValue: _FakeObject_41(
              this,
              Invocation.method(#notifyException, [exception, stackTrace]),
            ),
          )
          as Object);
}

/// A class which mocks [PostgrestQueryBuilder].
///
/// See the documentation for Mockito's code generation for more information.
class MockPostgrestQueryBuilder<T> extends _i1.Mock
    implements _i14.PostgrestQueryBuilder<T> {
  MockPostgrestQueryBuilder() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i14.PostgrestFilterBuilder<List<Map<String, dynamic>>> select([
    String? columns = '*',
  ]) =>
      (super.noSuchMethod(
            Invocation.method(#select, [columns]),
            returnValue:
                _FakePostgrestFilterBuilder_32<List<Map<String, dynamic>>>(
                  this,
                  Invocation.method(#select, [columns]),
                ),
          )
          as _i14.PostgrestFilterBuilder<List<Map<String, dynamic>>>);

  @override
  _i14.PostgrestFilterBuilder<T> insert(
    Object? values, {
    bool? defaultToNull = true,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #insert,
              [values],
              {#defaultToNull: defaultToNull},
            ),
            returnValue: _FakePostgrestFilterBuilder_32<T>(
              this,
              Invocation.method(
                #insert,
                [values],
                {#defaultToNull: defaultToNull},
              ),
            ),
          )
          as _i14.PostgrestFilterBuilder<T>);

  @override
  _i14.PostgrestFilterBuilder<T> upsert(
    Object? values, {
    String? onConflict,
    bool? ignoreDuplicates = false,
    bool? defaultToNull = true,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #upsert,
              [values],
              {
                #onConflict: onConflict,
                #ignoreDuplicates: ignoreDuplicates,
                #defaultToNull: defaultToNull,
              },
            ),
            returnValue: _FakePostgrestFilterBuilder_32<T>(
              this,
              Invocation.method(
                #upsert,
                [values],
                {
                  #onConflict: onConflict,
                  #ignoreDuplicates: ignoreDuplicates,
                  #defaultToNull: defaultToNull,
                },
              ),
            ),
          )
          as _i14.PostgrestFilterBuilder<T>);

  @override
  _i14.PostgrestFilterBuilder<T> update(Map<dynamic, dynamic>? values) =>
      (super.noSuchMethod(
            Invocation.method(#update, [values]),
            returnValue: _FakePostgrestFilterBuilder_32<T>(
              this,
              Invocation.method(#update, [values]),
            ),
          )
          as _i14.PostgrestFilterBuilder<T>);

  @override
  _i14.PostgrestFilterBuilder<T> delete() =>
      (super.noSuchMethod(
            Invocation.method(#delete, []),
            returnValue: _FakePostgrestFilterBuilder_32<T>(
              this,
              Invocation.method(#delete, []),
            ),
          )
          as _i14.PostgrestFilterBuilder<T>);

  @override
  _i14.PostgrestFilterBuilder<int> count([
    _i14.CountOption? option = _i14.CountOption.exact,
  ]) =>
      (super.noSuchMethod(
            Invocation.method(#count, [option]),
            returnValue: _FakePostgrestFilterBuilder_32<int>(
              this,
              Invocation.method(#count, [option]),
            ),
          )
          as _i14.PostgrestFilterBuilder<int>);

  @override
  _i14.PostgrestQueryBuilder<T> setHeader(String? key, String? value) =>
      (super.noSuchMethod(
            Invocation.method(#setHeader, [key, value]),
            returnValue: _FakePostgrestQueryBuilder_42<T>(
              this,
              Invocation.method(#setHeader, [key, value]),
            ),
          )
          as _i14.PostgrestQueryBuilder<T>);

  @override
  _i14.PostgrestBuilder<U, U, T> withConverter<U>(
    _i14.PostgrestConverter<U, T>? converter,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#withConverter, [converter]),
            returnValue: _FakePostgrestBuilder_43<U, U, T>(
              this,
              Invocation.method(#withConverter, [converter]),
            ),
          )
          as _i14.PostgrestBuilder<U, U, T>);

  @override
  Uri appendSearchParams(String? key, String? value, [Uri? url]) =>
      (super.noSuchMethod(
            Invocation.method(#appendSearchParams, [key, value, url]),
            returnValue: _FakeUri_44(
              this,
              Invocation.method(#appendSearchParams, [key, value, url]),
            ),
          )
          as Uri);

  @override
  Uri overrideSearchParams(String? key, String? value) =>
      (super.noSuchMethod(
            Invocation.method(#overrideSearchParams, [key, value]),
            returnValue: _FakeUri_44(
              this,
              Invocation.method(#overrideSearchParams, [key, value]),
            ),
          )
          as Uri);

  @override
  _i21.Stream<T> asStream() =>
      (super.noSuchMethod(
            Invocation.method(#asStream, []),
            returnValue: _i21.Stream<T>.empty(),
          )
          as _i21.Stream<T>);

  @override
  _i21.Future<T> catchError(Function? onError, {bool Function(Object)? test}) =>
      (super.noSuchMethod(
            Invocation.method(#catchError, [onError], {#test: test}),
            returnValue:
                _i25.ifNotNull(
                  _i25.dummyValueOrNull<T>(
                    this,
                    Invocation.method(#catchError, [onError], {#test: test}),
                  ),
                  (T v) => _i21.Future<T>.value(v),
                ) ??
                _FakeFuture_45<T>(
                  this,
                  Invocation.method(#catchError, [onError], {#test: test}),
                ),
          )
          as _i21.Future<T>);

  @override
  _i21.Future<U> then<U>(
    _i21.FutureOr<U> Function(T)? onValue, {
    Function? onError,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#then, [onValue], {#onError: onError}),
            returnValue:
                _i25.ifNotNull(
                  _i25.dummyValueOrNull<U>(
                    this,
                    Invocation.method(#then, [onValue], {#onError: onError}),
                  ),
                  (U v) => _i21.Future<U>.value(v),
                ) ??
                _FakeFuture_45<U>(
                  this,
                  Invocation.method(#then, [onValue], {#onError: onError}),
                ),
          )
          as _i21.Future<U>);

  @override
  _i21.Future<T> timeout(
    Duration? timeLimit, {
    _i21.FutureOr<T> Function()? onTimeout,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#timeout, [timeLimit], {#onTimeout: onTimeout}),
            returnValue:
                _i25.ifNotNull(
                  _i25.dummyValueOrNull<T>(
                    this,
                    Invocation.method(
                      #timeout,
                      [timeLimit],
                      {#onTimeout: onTimeout},
                    ),
                  ),
                  (T v) => _i21.Future<T>.value(v),
                ) ??
                _FakeFuture_45<T>(
                  this,
                  Invocation.method(
                    #timeout,
                    [timeLimit],
                    {#onTimeout: onTimeout},
                  ),
                ),
          )
          as _i21.Future<T>);

  @override
  _i21.Future<T> whenComplete(_i21.FutureOr<void> Function()? action) =>
      (super.noSuchMethod(
            Invocation.method(#whenComplete, [action]),
            returnValue:
                _i25.ifNotNull(
                  _i25.dummyValueOrNull<T>(
                    this,
                    Invocation.method(#whenComplete, [action]),
                  ),
                  (T v) => _i21.Future<T>.value(v),
                ) ??
                _FakeFuture_45<T>(
                  this,
                  Invocation.method(#whenComplete, [action]),
                ),
          )
          as _i21.Future<T>);
}

/// A class which mocks [SupabaseStorageClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockSupabaseStorageClient extends _i1.Mock
    implements _i14.SupabaseStorageClient {
  MockSupabaseStorageClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get url =>
      (super.noSuchMethod(
            Invocation.getter(#url),
            returnValue: _i25.dummyValue<String>(this, Invocation.getter(#url)),
          )
          as String);

  @override
  Map<String, String> get headers =>
      (super.noSuchMethod(
            Invocation.getter(#headers),
            returnValue: <String, String>{},
          )
          as Map<String, String>);

  @override
  _i22.Fetch get storageFetch =>
      (super.noSuchMethod(
            Invocation.getter(#storageFetch),
            returnValue: _FakeFetch_46(this, Invocation.getter(#storageFetch)),
          )
          as _i22.Fetch);

  @override
  set storageFetch(_i22.Fetch? _storageFetch) => super.noSuchMethod(
    Invocation.setter(#storageFetch, _storageFetch),
    returnValueForMissingStub: null,
  );

  @override
  _i14.StorageFileApi from(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#from, [id]),
            returnValue: _FakeStorageFileApi_47(
              this,
              Invocation.method(#from, [id]),
            ),
          )
          as _i14.StorageFileApi);

  @override
  void setAuth(String? jwt) => super.noSuchMethod(
    Invocation.method(#setAuth, [jwt]),
    returnValueForMissingStub: null,
  );

  @override
  _i21.Future<List<_i14.Bucket>> listBuckets() =>
      (super.noSuchMethod(
            Invocation.method(#listBuckets, []),
            returnValue: _i21.Future<List<_i14.Bucket>>.value(<_i14.Bucket>[]),
          )
          as _i21.Future<List<_i14.Bucket>>);

  @override
  _i21.Future<_i14.Bucket> getBucket(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#getBucket, [id]),
            returnValue: _i21.Future<_i14.Bucket>.value(
              _FakeBucket_48(this, Invocation.method(#getBucket, [id])),
            ),
          )
          as _i21.Future<_i14.Bucket>);

  @override
  _i21.Future<String> createBucket(
    String? id, [
    _i14.BucketOptions? bucketOptions = const _i14.BucketOptions(public: false),
  ]) =>
      (super.noSuchMethod(
            Invocation.method(#createBucket, [id, bucketOptions]),
            returnValue: _i21.Future<String>.value(
              _i25.dummyValue<String>(
                this,
                Invocation.method(#createBucket, [id, bucketOptions]),
              ),
            ),
          )
          as _i21.Future<String>);

  @override
  _i21.Future<String> updateBucket(
    String? id,
    _i14.BucketOptions? bucketOptions,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updateBucket, [id, bucketOptions]),
            returnValue: _i21.Future<String>.value(
              _i25.dummyValue<String>(
                this,
                Invocation.method(#updateBucket, [id, bucketOptions]),
              ),
            ),
          )
          as _i21.Future<String>);

  @override
  _i21.Future<String> emptyBucket(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#emptyBucket, [id]),
            returnValue: _i21.Future<String>.value(
              _i25.dummyValue<String>(
                this,
                Invocation.method(#emptyBucket, [id]),
              ),
            ),
          )
          as _i21.Future<String>);

  @override
  _i21.Future<String> deleteBucket(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#deleteBucket, [id]),
            returnValue: _i21.Future<String>.value(
              _i25.dummyValue<String>(
                this,
                Invocation.method(#deleteBucket, [id]),
              ),
            ),
          )
          as _i21.Future<String>);
}

/// A class which mocks [GoogleSignIn].
///
/// See the documentation for Mockito's code generation for more information.
class MockGoogleSignIn extends _i1.Mock implements _i23.GoogleSignIn {
  MockGoogleSignIn() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i23.SignInOption get signInOption =>
      (super.noSuchMethod(
            Invocation.getter(#signInOption),
            returnValue: _i23.SignInOption.standard,
          )
          as _i23.SignInOption);

  @override
  List<String> get scopes =>
      (super.noSuchMethod(Invocation.getter(#scopes), returnValue: <String>[])
          as List<String>);

  @override
  bool get forceCodeForRefreshToken =>
      (super.noSuchMethod(
            Invocation.getter(#forceCodeForRefreshToken),
            returnValue: false,
          )
          as bool);

  @override
  _i21.Stream<_i23.GoogleSignInAccount?> get onCurrentUserChanged =>
      (super.noSuchMethod(
            Invocation.getter(#onCurrentUserChanged),
            returnValue: _i21.Stream<_i23.GoogleSignInAccount?>.empty(),
          )
          as _i21.Stream<_i23.GoogleSignInAccount?>);

  @override
  _i21.Future<_i23.GoogleSignInAccount?> signInSilently({
    bool? suppressErrors = true,
    bool? reAuthenticate = false,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#signInSilently, [], {
              #suppressErrors: suppressErrors,
              #reAuthenticate: reAuthenticate,
            }),
            returnValue: _i21.Future<_i23.GoogleSignInAccount?>.value(),
          )
          as _i21.Future<_i23.GoogleSignInAccount?>);

  @override
  _i21.Future<bool> isSignedIn() =>
      (super.noSuchMethod(
            Invocation.method(#isSignedIn, []),
            returnValue: _i21.Future<bool>.value(false),
          )
          as _i21.Future<bool>);

  @override
  _i21.Future<_i23.GoogleSignInAccount?> signIn() =>
      (super.noSuchMethod(
            Invocation.method(#signIn, []),
            returnValue: _i21.Future<_i23.GoogleSignInAccount?>.value(),
          )
          as _i21.Future<_i23.GoogleSignInAccount?>);

  @override
  _i21.Future<_i23.GoogleSignInAccount?> signOut() =>
      (super.noSuchMethod(
            Invocation.method(#signOut, []),
            returnValue: _i21.Future<_i23.GoogleSignInAccount?>.value(),
          )
          as _i21.Future<_i23.GoogleSignInAccount?>);

  @override
  _i21.Future<_i23.GoogleSignInAccount?> disconnect() =>
      (super.noSuchMethod(
            Invocation.method(#disconnect, []),
            returnValue: _i21.Future<_i23.GoogleSignInAccount?>.value(),
          )
          as _i21.Future<_i23.GoogleSignInAccount?>);

  @override
  _i21.Future<bool> requestScopes(List<String>? scopes) =>
      (super.noSuchMethod(
            Invocation.method(#requestScopes, [scopes]),
            returnValue: _i21.Future<bool>.value(false),
          )
          as _i21.Future<bool>);

  @override
  _i21.Future<bool> canAccessScopes(
    List<String>? scopes, {
    String? accessToken,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #canAccessScopes,
              [scopes],
              {#accessToken: accessToken},
            ),
            returnValue: _i21.Future<bool>.value(false),
          )
          as _i21.Future<bool>);
}

/// A class which mocks [GoogleSignInAccount].
///
/// See the documentation for Mockito's code generation for more information.
// ignore: must_be_immutable
class MockGoogleSignInAccount extends _i1.Mock
    implements _i23.GoogleSignInAccount {
  MockGoogleSignInAccount() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get email =>
      (super.noSuchMethod(
            Invocation.getter(#email),
            returnValue: _i25.dummyValue<String>(
              this,
              Invocation.getter(#email),
            ),
          )
          as String);

  @override
  String get id =>
      (super.noSuchMethod(
            Invocation.getter(#id),
            returnValue: _i25.dummyValue<String>(this, Invocation.getter(#id)),
          )
          as String);

  @override
  _i21.Future<_i23.GoogleSignInAuthentication> get authentication =>
      (super.noSuchMethod(
            Invocation.getter(#authentication),
            returnValue: _i21.Future<_i23.GoogleSignInAuthentication>.value(
              _FakeGoogleSignInAuthentication_49(
                this,
                Invocation.getter(#authentication),
              ),
            ),
          )
          as _i21.Future<_i23.GoogleSignInAuthentication>);

  @override
  _i21.Future<Map<String, String>> get authHeaders =>
      (super.noSuchMethod(
            Invocation.getter(#authHeaders),
            returnValue: _i21.Future<Map<String, String>>.value(
              <String, String>{},
            ),
          )
          as _i21.Future<Map<String, String>>);

  @override
  _i21.Future<void> clearAuthCache() =>
      (super.noSuchMethod(
            Invocation.method(#clearAuthCache, []),
            returnValue: _i21.Future<void>.value(),
            returnValueForMissingStub: _i21.Future<void>.value(),
          )
          as _i21.Future<void>);
}

/// A class which mocks [GoogleSignInAuthentication].
///
/// See the documentation for Mockito's code generation for more information.
class MockGoogleSignInAuthentication extends _i1.Mock
    implements _i23.GoogleSignInAuthentication {
  MockGoogleSignInAuthentication() {
    _i1.throwOnMissingStub(this);
  }
}
